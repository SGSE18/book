(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{78:function(e,n,i){e.exports=i.p+"assets/img/NetzwerkTopologien.e034f517.png"},79:function(e,n,i){e.exports=i.p+"assets/img/decentralised-database.d346d038.png"},80:function(e,n,i){e.exports=i.p+"assets/img/distributed-database.e151bbed.png"},81:function(e,n,i){e.exports=i.p+"assets/img/crypto_mac.0f7f56b1.png"},82:function(e,n,i){e.exports=i.p+"assets/img/digital_sign.b959afd8.svg"},83:function(e,n,i){e.exports=i.p+"assets/img/asym_verschl2.f7857205.png"},84:function(e,n,i){e.exports=i.p+"assets/img/asym_verschl.17776738.png"},85:function(e,n,i){e.exports=i.p+"assets/img/sym_verschl2.8a17b406.png"},86:function(e,n,i){e.exports=i.p+"assets/img/sym_verschl.34bb59e1.png"},94:function(e,n,i){"use strict";i.r(n);var r=[function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"grundlagen"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#grundlagen","aria-hidden":"true"}},[e._v("#")]),e._v(" Grundlagen")]),r("h2",{attrs:{id:"kryptographie"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#kryptographie","aria-hidden":"true"}},[e._v("#")]),e._v(" Kryptographie")]),r("p",[e._v("Autor: Lukas Stuckstette und Patrick Vogt")]),r("p",[e._v("Um die Funktionsweise einer Blockchain verstehen zu können, ist ein grundsätzliches Verständnis im Bereich der Kryptographie unerlässlich. Dieses Kapitel soll deshalb einen Überblick über die Grundlagen der Kryptographie schaffen.\nHierzu werden zunächst einige grundlegende Begrifflichkeiten erläutert sowie Themenbereiche der Verschlüsselung und Signierung vorgestellt.")]),r("h3",{attrs:{id:"einige-wichtige-begriffe-der-kryptographie"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#einige-wichtige-begriffe-der-kryptographie","aria-hidden":"true"}},[e._v("#")]),e._v(" Einige wichtige Begriffe der Kryptographie")]),r("p",[e._v("Autor: Patrick Vogt")]),r("p",[r("strong",[e._v("CIA-Schutzziele")])]),r("p",[e._v("Kryptographie ist ein mögliches Mittel gegen gezielte Angriffe auf Softwaresysteme. Das Akronym "),r("em",[e._v("CIA")]),e._v(" spiegelt drei wichtige Schutzziele wider. Es ergibt sich aus den folgenden drei Begriffen, "),r("a",{attrs:{href:"#ref_baum14"}},[e._v("[BAUM14]")]),e._v(":")]),r("ul",[r("li",[r("strong",[e._v("C")]),e._v("onfidentiality (Vertraulichkeit): Informationen sind nur autorisierten Personen zugänglich")]),r("li",[r("strong",[e._v("I")]),e._v("ntegrity (Integrität): Informationen sind korrekt, aktuell und vollständig")]),r("li",[r("strong",[e._v("A")]),e._v("vailability (Verfügbarkeit): Informationen sind berechtigten Personen dort und dann zugänglich, wo und wann diese die Informationen benötigen")])]),r("p",[r("strong",[e._v("Authentizität")])]),r("p",[e._v("Das Sicherheitsziel "),r("em",[e._v("Authentizität")]),e._v(" gewährleistet, dass ein Kommunikationspartner wirklich derjenige ist, der er vorgibt zu sein. Sind Daten oder Informationen authentisch, so ist deren Herkunft gewiss.")]),r("p",[r("strong",[e._v("Nichtabstreitbarkeit")])]),r("p",[e._v("Ebenso wichtig ist der Begriff der "),r("em",[e._v("Nichtabstreitbarkeit")]),e._v(". Diese gewährleistet eine Nachweisbarkeit gegenüber Dritten, sodass der Versand und Empfang einer Nachricht, bzw. von Daten/Informationen, bewiesen werden kann. Hieraus ergeben sich zwei Unterkategorien:")]),r("ul",[r("li",[r("p",[e._v("Nichtabstreitbarkeit der Herkunft: verhindert ein nachträgliches Abstreiten des "),r("strong",[e._v("Versands")]),e._v(" einer Nachricht")])]),r("li",[r("p",[e._v("Nichtabstreitbarkeit des Erhalts: verhindert ein nachträgliche Abstreiten des "),r("strong",[e._v("Erhaltens")]),e._v(" einer Nachricht")])])]),r("p",[r("strong",[e._v("Verbindlichkeit")])]),r("p",[e._v("Der Begriff der "),r("em",[e._v("Verbindlichkeit")]),e._v(" kombiniert Authentizität mit Nichtabstreitbarkeit. Im Falle einer Datenübertragung heißt das, dass der Absender seine Identität bewiesen hat und der Empfang der Nachricht nicht abgestritten werden kann "),r("a",[r("a",{attrs:{href:"#ref_bsi18a"}},[e._v("[BSI18a]")])]),e._v(".")]),r("p",[r("strong",[e._v("Kerckhoffs’ Prinzip")])]),r("p",[e._v("Ein wichtiger Grundsatz der Kryptographie wurde 1883 von Auguste Kerkchoffs von Nieuwenhof (* 1835, † 1903) festgestellt. In seiner Schrift beschrieb er das folgende Prinzip:")]),r("blockquote",[r("p",[e._v("Die Sicherheit eines Kryptosystems liegt allein in der Schwierigkeit, den Schlüssel zu finden – sie darf nicht auf der Geheimhaltung des Systems beruhen. "),r("a",[r("a",{attrs:{href:"#ref_baum14"}},[e._v("[BAUM14]")])])])]),r("p",[e._v("Alle heutzutage gängigen Verschlüsselungsverfahren folgen diesem Grundsatz.\nBefolgt man diesen Grundsatz nicht, erhält ein potentieller Angreifer Zugriff auf alle Daten, sobald das Verfahren, z.B. aufgrund eines Informationslecks, bekannt wird. Des Weiteren ermöglicht dies, dass Experten über die Sicherheit der Verfahren offen diskutieren können und ggf. auftretende Sicherheitslücken erkannt und behoben werden können.")]),r("h3",{attrs:{id:"hashfunktionen"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#hashfunktionen","aria-hidden":"true"}},[e._v("#")]),e._v(" Hashfunktionen")]),r("p",[e._v("Autor: Patrick Vogt")]),r("p",[e._v("Hashfunktionen bilden einen wichtigen Bestandteil innerhalb der Kryptographie. Sie berechnen aus einer gegebenen Nachricht einen sogenannten "),r("em",[e._v("Hashwert")]),e._v(' fester Länge. Aus kryptografischer Sicht können Hashwerte als eine Prüfsumme gesehen werden.\nHierbei handelt es sich im Prinzip um eine "Einwegfunktion", bei der der Weg vom Definitionsbereich hin zum Bildbereich einfach durchzuführen ist, die Rückrichtung jedoch nur mit großem Aufwand bestimmbar ist. Selbst wenn es einem Angreifer gelingen sollte einen passenden Wert für einen gegebenen Hashwert zu berechnen, so ist sein Ergebnis nicht eindeutig '),r("a",[r("a",{attrs:{href:"#ref_paar16"}},[e._v("[PAAR16]")])]),e._v(".")]),r("p",[e._v("Das liegt daran, dass sogenannte "),r("em",[e._v("Kollisionen")]),e._v(" auftreten können. Das bedeutet, dass aufgrund des eingeschränkten Bildbereichs (begrenzte Anzahl an Zeichen) und des gleichzeitig unbegrenzten Definitionsbereichs (quasi beliebig lange Zeichenfolge) zwangsweise Überschneidungen auftreten können. Je schwieriger man für eine gegebene Nachricht eine weitere Nachricht mit identischem Hashwert finden kann, desto "),r("em",[e._v("kollisionssicherer")]),e._v(" ist das Hashverfahren.")]),r("p",[e._v("Hashfunktionen können z.B. für das Speichern von Passwörtern verwendet werden, sodass innerhalb einer Datenbank das Passwort nicht als Klartext (sondern als Hashwert) hinterlegt wird "),r("a",[r("a",{attrs:{href:"#ref_paar16"}},[e._v("[PAAR16]")])]),e._v('. Bei Blockchains werden Hashfunktionen z.B. dazu genutzt, um die einzelnen Blöcke miteinander zu verbinden (siehe Abschnitt "Die Blockchain" im Kapitel "Verteilte Systeme").')]),r("h3",{attrs:{id:"verschlusselung"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#verschlusselung","aria-hidden":"true"}},[e._v("#")]),e._v(" Verschlüsselung")]),r("p",[e._v("Autor: Patrick Vogt")]),r("p",[r("em",[e._v("Symmetrische Verschlüsselung")])]),r("p",[e._v("Eine Art der Verschlüsselung ist die symmetrische Verschlüsselung. Bereits Gaius Julius Caesar (* 100 v. Chr., † 44 v. Chr.)  verwendete diese Art der Verschlüsselung zur Kommunikation mit seinen Generälen\n(die sogenannte "),r("em",[e._v("Caesarchiffre")]),e._v("). Die Schlüssel dieser Verfahren werden "),r("em",[e._v("symmetrische Schlüssel")]),e._v(" genannt, da Chiffrier- und Dechiffrierschlüssel identisch sind, siehe nachfolgende Abbildung.")]),r("p",[r("a",{attrs:{name:"ref_sym_encryption"}}),r("img",{attrs:{src:i(86),alt:"sym_encryption",title:"Symmetrische Verschlüsselung"}})]),r("p",[e._v("Abbildung entnommen aus "),r("a",[r("a",{attrs:{href:"#ref_ssl18"}},[e._v("[SSL18]")])])]),r("p",[e._v("Problematisch ist hierbei, dass Sender und Empfänger den gemeinsamen Schlüssel einmalig vor der ersten Übertragung austauschen müssen.\nEs wird somit ein Kommunikationskanal benötigt, in dem die Teilnehmer ihren Schlüssel auf sichere Art und Weise austauschen können, siehe nachfolgende Abbildung.")]),r("p",[r("img",{attrs:{src:i(85),alt:"sym_encryption",title:"Symmetrische Verschlüsselung"}})]),r("p",[e._v("Abbildung entnommen aus "),r("a",[r("a",{attrs:{href:"#ref_baum14"}},[e._v("[BAUM14]")])])]),r("p",[e._v("Ebenso ist zu erwähnen, dass die Anzahl der benötigten Schlüssel mit der Anzahl der Kommunikationspartner drastisch steigt. Damit N Teilnehmer sicher miteinander kommunizieren können, werden\n"),r("strong",[e._v("N(N-1)/2")]),e._v(" Schlüssel benötigt "),r("a",[r("a",{attrs:{href:"#ref_kuesters11"}},[e._v("[KÜST11]")])]),e._v(".\nAls Vorteil ist unter anderem die hohe Geschwindigkeit für das Ver- und Entschlüsseln der Daten zu nennen, da diese Verfahren meist auf effizienten Operationen (z.B. XOR) beruhen "),r("a",[r("a",{attrs:{href:"#ref_stop18"}},[e._v("[STOP18]")])]),e._v(".")]),r("p",[r("em",[e._v("Asymmetrische Verschlüsselung")])]),r("p",[e._v("Im Gegensatz zur symmetrischen Verschlüsselung verwendet die asymmetrische Verschlüsselung verschiedene Schlüssel zur Ver- und Entschlüsselung.\nEs existiert ein "),r("em",[e._v("Schlüsselpaar")]),e._v(", das aus einem öffentlichen Schlüssel (public key) sowie einem privaten Schlüssel (private key/secret key) besteht. Das grundsätzliche Verfahren ist in der folgenden Abbildung\ndargestellt.")]),r("p",[r("img",{attrs:{src:i(84),alt:"asym_encryption",title:"Asymmetrische Verschlüsselung"}}),e._v("\nAbbildung entnommen aus "),r("a",[r("a",{attrs:{href:"#ref_ssl18"}},[e._v("[SSL18]")])])]),r("p",[e._v("Der Absender verwendet den öffentlichen Schlüssel des Empfängers zum Verschlüsseln der Daten. Der Empfänger erhält den verschlüsselten Text und kann diesen mit seinem privaten Schlüssel\ndechiffrieren. Der große Vorteil dieses Verfahrens liegt darin, dass der öffentliche Schlüssel nicht geheim gehalten werden muss, da er nicht zum Entschlüsseln der Daten genutzt werden kann. Der bei der symmetrischen Verschlüsselung benötigte sichere Kommunikationskanal entfällt somit, siehe nachfolgende Abbildung. Der private Schlüssel sollte dementsprechend nur dem jeweiligen Empfänger bekannt sein und von ihm geheim gehalten werden. Da die Schlüssel jeweils von nur einem Teilnehmer abhängig sind, steigt die Anzahl der Schlüssel bei steigender Anzahl an Teilnehmern nicht quadratisch, wie bei der symmetrischen Verschlüsselung, sondern linear.")]),r("p",[r("img",{attrs:{src:i(83),alt:"asym_encryption",title:"Asymmetrische Verschlüsselung"}})]),r("p",[e._v("Abbildung entnommen aus "),r("a",[r("a",{attrs:{href:"#ref_baum14"}},[e._v("[BAUM14]")])])]),r("h3",{attrs:{id:"digitale-signaturen"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#digitale-signaturen","aria-hidden":"true"}},[e._v("#")]),e._v(" Digitale Signaturen")]),r("p",[e._v("Autor: Patrick Vogt")]),r("p",[e._v("Ähnlich wie herkömmliche (analoge) Signaturen sollen digitale Signaturen sicherstellen, dass eine Nachricht bzw. ein Dokument tatsächlich von dem Absender/Signierer stammt, der vorgibt das Dokument erstellt zu haben.")]),r("p",[e._v("Mithilfe von digitalen Signaturen kann sichergestellt werden, dass mit dem richtigen Gegenüber kommuniziert wird (beispielsweise beim Schlüsselaustausch zweier Teilnehmer).\nEine Verschlüsselung der Daten erfolgt bei der Signierung nicht, wenngleich eine zusätzliche Verschlüsselung der signierten Nachricht durchaus üblich ist "),r("a",[r("a",{attrs:{href:"#ref_paar16"}},[e._v("[PAAR16]")])]),e._v(".")]),r("p",[e._v("Die nachfolgende Abbildung zeigt den prinzipiellen Ablauf beim Übermitteln digital signierter Dokumente.")]),r("p",[r("img",{attrs:{src:i(82),alt:"dig_signature",title:"Prinzip der digitalen Signatur"}}),e._v("\nAbbildung entnommen aus "),r("a",[r("a",{attrs:{href:"#ref_docu18"}},[e._v("[DOCU18]")])])]),r("p",[e._v('Das zu signierende Dokument wird mithilfe einer Hashfunktion verarbeitet und anschließend mit dem privaten Schlüssel des Absenders ("Signierers") verschlüsselt und an das originale Dokument angefügt. Das nun signierte Dokument wird an den Empfänger gesendet, wo die Signatur mithilfe des öffentlichen Schlüssels des Signierers entschlüsselt wird. Der Empfänger wendet anschließend den gleichen Hash-Algorithmus wie der Absender\nauf das Dokument an und vergleicht sein Ergebnis mit der empfangenen Signatur. Stimmen die beiden Hashwerte überein wurde der Text mit sehr hoher Wahrscheinlichkeit von der angegebenen Person signiert und nicht verändert.')]),r("p",[e._v("Im Gegensatz zu anderen (auf symmetrischen Verfahren basierenden) Signaturverfahren kann der Empfänger der Nachricht jedem - der ebenfalls den öffentlichen Schlüssel des Signierers kennt - beweisen, dass dieser die Nachricht verfasst hat.\nSolche digitalen Signaturverfahren können deshalb auch zur juristischen Beweisführung verwendet werden "),r("a",[r("a",{attrs:{href:"#ref_paar16"}},[e._v("[PAAR16]")])]),e._v(".")]),r("p",[e._v("Anforderungen an die Verwendung von digitalen Signaturen werden in Deutschland im Signaturgesetz (SigG) bzw. in der Signaturverordnung (SigV) angegeben.\nHier werden drei verschiedene Arten von elektronischen Signaturen unterschieden "),r("a",[r("a",{attrs:{href:"#ref_baum14"}},[e._v("[BAUM14]")])]),e._v(":")]),r("blockquote",[r("ul",[r("li",[e._v("Als "),r("strong",[e._v("elektronische Signatur")]),e._v(" werden in elektronischer Form vorliegende Daten betrachtet, die zur Authentifizierung dienen und die anderen elektronischen Daten beigefügt\nwerden können. Es könnte sich hierbei also auch um eine eingescannte Unterschrift\nhandeln.")]),r("li",[r("strong",[e._v("Fortgeschrittene elektronische Signaturen")]),e._v(" sind ausschließlich dem Inhaber des Signierschlüssels zuzuordnen. Hier handelt es sich also um Signaturen, die mit einem digitalen\nSignatursystem erzeugt wurden. Allerdings werden keine besonderen Anforderungen\nan die Sicherheit gestellt.")]),r("li",[r("strong",[e._v("Qualifizierte elektronische Signaturen")]),e._v(" müssen ebenfalls mit einem digitalen Signatursystem erzeugt werden. Zusätzlich müssen Sicherheitsanforderungen bei der Erzeugung dieser Signaturen erfüllt sein, und der Zusammenhang zwischen Testschlüssel\nund Identität des entsprechenden Teilnehmers muss durch ein zum Zeitpunkt der Erstellung gültiges qualifiziertes Zertifikat bestätigt werden.")])])]),r("p",[e._v("Letztere Signaturen beinhalten zusätzlich zum Namen und Testschlüssel weitere Details (z.B. das Erzeugungsdatum und Gültigkeit des Zertifikats) "),r("a",[r("a",{attrs:{href:"#ref_baum14"}},[e._v("[BAUM14]")])]),e._v(".")]),r("h3",{attrs:{id:"message-authentication-code-mac"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#message-authentication-code-mac","aria-hidden":"true"}},[e._v("#")]),e._v(" Message Authentication Code (MAC)")]),r("p",[e._v("Autor: Patrick Vogt")]),r("p",[e._v("Message Authentication Codes (MACs) werden auch kryptografische Prüfsummen genannt. Sie dienen der Sicherstellung der Integrität und Authentisierung von Nachrichten. MACs beruhen, im Gegensatz zu digitalen Signaturen, auf einem symmetrischen Verfahren, wodurch eine Nichtzurückweisbarkeit nicht gewährleistet werden kann. Es werden Hashfunktionen oder Blockchiffren verwendet, wodurch sie in der Regel deutlich schneller als digitale Signaturen verarbeitet werden können.")]),r("p",[e._v("Im Wesentlichen wird mithilfe eines symmetrischen Schlüssels "),r("em",[e._v("k")]),e._v(" und der Nachricht "),r("em",[e._v("x")]),e._v(" eine Prüfsumme "),r("em",[e._v("m")]),e._v(" gebildet:")]),r("blockquote",[r("p",[e._v("m = MAC"),r("sub",[e._v("k")]),e._v("(x)")])]),r("p",[e._v("Auf diese Art und Weise soll sichergestellt werden, dass die Nachricht auf dem Weg zum Empfänger nicht verändert wurde "),r("a",[r("a",{attrs:{href:"#ref_paar16"}},[e._v("[PAAR16]")])]),e._v(".")]),r("p",[e._v("Der gesamte Vorgang läuft prinzipiell wie bei digitalen Signaturen ab:")]),r("p",[r("img",{attrs:{src:i(81),alt:"dig_signature",title:"Prinzip von MACs"}})]),r("p",[e._v("Abbildung entnommen aus "),r("a",[r("a",{attrs:{href:"#ref_wiki18b"}},[e._v("[WIKI18b]")])])]),r("p",[e._v("Der Sender bildet mithilfe des gemeinsamen Schlüssels und der Nachricht eine Prüfsumme und verschickt die Nachricht mit angehängter Prüfsumme. Der Empfänger führt den gleichen Vorgang durch und prüft seine berechnete Prüfsumme mit der erhaltenen.")]),r("h3",{attrs:{id:"public-key-infrastructure-pki"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#public-key-infrastructure-pki","aria-hidden":"true"}},[e._v("#")]),e._v(" Public Key Infrastructure (PKI)")]),r("p",[e._v("Autor: Patrick Vogt")]),r("p",[e._v("Bei Verfahren, die auf asymmetrischen Methodiken beruhen, muss sichergestellt werden, dass ein bestimmter öffentlicher Schlüssel tatsächlich einer gewissen Person gehört. Die Gültigkeit dieser "),r("em",[e._v("Schlüsselbindung")]),e._v(" wird von "),r("em",[e._v("Zertifizierungsstellen")]),e._v(" ("),r("em",[e._v("certification authorities, CA")]),e._v("), mithilfe von "),r("em",[e._v("Zertifikaten")]),e._v(" ("),r("em",[e._v("cetificates")]),e._v("), bestätigt "),r("a",[r("a",{attrs:{href:"#ref_kuesters11"}},[e._v("[KÜST11]")])]),e._v(". Public Key Infrastructures (PKIs) verwalten und verteilen die Schlüssel und Zertifikate.")]),r("p",[e._v("Digitale Zertifikate bestehen aus einem öffentlichen Schlüssel sowie aus zusätzlichen Informationen, z.B.:")]),r("ul",[r("li",[e._v("wer hat das Zertifikat ausgestellt?")]),r("li",[e._v("für wen wurde das Zertifikat ausgestellt (Besitzer des privaten Schlüssels)?")]),r("li",[e._v("Gültigkeitszeitraum des Zertifikats")]),r("li",[e._v("Fingerprint (eindeutige Kennung; z.B. durch Anwenden einer Hashfunktion auf den öffentlichen Schlüssel)")])]),r("p",[e._v('Damit der Austausch solcher Zertifikate einfach und sicher durchgeführt werden kann, erstellt eine Zertifizierungsstelle ein Wurzelzertifikat (Root-Zertifikat). Diese Stelle muss für alle Teilnehmer als vertrauenswürdig eingestuft sein. Mithilfe des zum Wurzelzertifikat gehörenden privaten Schlüssels können weiteren Zertifikate signiert werden. Private Schlüssel, deren Zertifikat von einem Wurzelzertifikat signiert wurde, können ebenfalls zum Signieren weiterer Zertifikate verwendet werden. Diese Zertifikate dürfen wiederum weitere Zertifkate signieren. Eine solche "Signatur-Kette" darf beliebig lang weitergeführt werden, solange sie beim Wurzelzertifikat einer CA beginnt.\nZur Überprüfung der Vertrauenswürdigkeit und Echtheit müssen dementsprechend alle Zertifikate der Kette überprüft werden '),r("a",{attrs:{href:"#ref_BSI18b"}},[e._v("[BSI18b]")]),e._v(".")]),r("h3",{attrs:{id:"algorithmen"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#algorithmen","aria-hidden":"true"}},[e._v("#")]),e._v(" Algorithmen")]),r("p",[e._v("Autor: Patrick Vogt")]),r("p",[e._v("Im Bereich der Kryptographie gibt es eine Vielzahl von verschiedenen Algorithmen Arten . Die nachfolgende Tabelle soll, basierend auf den Empfehlungen in "),r("a",{attrs:{href:"#ref_bsi18c"}},[e._v("[BSI18c]")]),e._v(", einen Überblick über einige aktuell bedeutende Algorithmen Arten verschaffen.")]),r("table",[r("thead",[r("tr",[r("th",[e._v("Verfahren")]),r("th",[e._v("Typ/Grundkategorie")]),r("th",[e._v("Anwendungsgebiet")]),r("th",[e._v("Sicherheitsbasis/-prinzip")])])]),r("tbody",[r("tr",[r("td",[e._v("AES")]),r("td",[e._v("Blockchiffre")]),r("td",[e._v("Verschlüsselung")]),r("td",[e._v("kein effizienter Weg zur Bestimmung des symmetrischen Schlüssels bekannt; viele Jahre bewährt")])]),r("tr",[r("td",[e._v("SHA")]),r("td",[e._v("Hashfunktion")]),r("td",[e._v("Signatur")]),r("td",[e._v("kollisionssichere Hashfunktion")])]),r("tr",[r("td",[e._v("CMAC")]),r("td",[e._v("MAC (Blockchiffre)")]),r("td",[e._v("Signatur")]),r("td",[e._v("sicheres Blockchiffre-Verfahren")])]),r("tr",[r("td",[e._v("HMAC")]),r("td",[e._v("MAC (Hashfunktion)")]),r("td",[e._v("Signatur")]),r("td",[e._v("kollisionssichere Hashfunktion")])]),r("tr",[r("td",[e._v("GMAC")]),r("td",[e._v("MAC (Blockchiffre)")]),r("td",[e._v("Signatur")]),r("td",[e._v("sicheres Blockchiffre-Verfahren")])]),r("tr",[r("td",[e._v("RSA")]),r("td",[e._v("asym. Schlüsselpaar")]),r("td",[e._v("Verschl. & Signatur")]),r("td",[e._v("Umkehrfunktion von Faktorisierung schwer zu berechnen")])]),r("tr",[r("td",[e._v("DSA")]),r("td",[e._v("asym. Schlüsselpaar & Hashfunktion")]),r("td",[e._v("Signatur")]),r("td",[e._v("Umkehrfunktion von diskreter Log. schwer zu berechnen")])]),r("tr",[r("td",[e._v("Elliptische Kurven")]),r("td",[e._v("Einwegfunktion")]),r("td",[e._v("Signatur")]),r("td",[e._v("Umkehrfunktion von elliptischen Kurven schwer zu berechnen")])]),r("tr",[r("td",[e._v("Diffie-Hellman")]),r("td",[e._v("Protokoll")]),r("td",[e._v("Schlüsselaustausch")]),r("td",[e._v("Umkehrfunktion diskreter Exponentialfunktionen schwer zu berechnen")])]),r("tr",[r("td",[e._v("Merkle-Signaturen")]),r("td",[e._v("Merkle-Tree & Einmalsignatur")]),r("td",[e._v("Signatur")]),r("td",[e._v("mehrstufige Hash-Verfahren zu einem einzigen Hashwert zusammenfassen (als öffentlicher Schlüssel)")])])])]),r("p",[e._v("In "),r("a",[r("a",{attrs:{href:"#ref_bsi18c"}},[e._v("[BSI18c]")])]),e._v(" werden im speziellen folgende Algorithmen empfohlenen:")]),r("p",[e._v("Blockchiffren (symmetrisches Verfahren für Blöcke fester Längen):")]),r("ul",[r("li",[e._v("AES-128")]),r("li",[e._v("AES-192")]),r("li",[e._v("AES-256")])]),r("p",[e._v("Stromchiffren (symmetrisches Verfahren für Blöcke beliebiger Längen):")]),r("p",[r("em",[e._v("keine Verfahren empfohlen")])]),r("p",[e._v("Hashfunktionen:")]),r("ul",[r("li",[e._v("SHA-256")]),r("li",[e._v("SHA-512/256")]),r("li",[e._v("SHA-384")]),r("li",[e._v("SHA-512")]),r("li",[e._v("SHA3-256")]),r("li",[e._v("SHA3-384")]),r("li",[e._v("SHA3-512")])]),r("p",[e._v("MAC:")]),r("ul",[r("li",[e._v("CMAC")]),r("li",[e._v("HMAC")]),r("li",[e._v("GMAC")])]),r("p",[e._v("Signaturverfahren:")]),r("ul",[r("li",[e._v("RSA")]),r("li",[e._v("DSA")]),r("li",[e._v("DSA auf Basis elliptischer Kurven\n"),r("ul",[r("li",[e._v("ECDSA")]),r("li",[e._v("ECKDSA")]),r("li",[e._v("ECGDSA")])])]),r("li",[e._v("Merkle-Signaturen")])]),r("p",[e._v("Schlüsseltransport (asymmetrische Verfahren):")]),r("ul",[r("li",[e._v("Diffie-Hellmann")]),r("li",[e._v("EC Diffie-Hellman (ECKA-DH)")])]),r("h3",{attrs:{id:"zero-knowledge-proofs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#zero-knowledge-proofs","aria-hidden":"true"}},[e._v("#")]),e._v(" Zero knowledge Proofs")]),r("p",[e._v("Autor: Lukas Stuckstette")]),r("h2",{attrs:{id:"distributed-ledger-vs-datenbanken"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#distributed-ledger-vs-datenbanken","aria-hidden":"true"}},[e._v("#")]),e._v(" Distributed Ledger vs. Datenbanken")]),r("p",[e._v("Autor: Tim Jastrzembski")]),r("h3",{attrs:{id:"exkurs-datenbank-gree15-bege18"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#exkurs-datenbank-gree15-bege18","aria-hidden":"true"}},[e._v("#")]),e._v(" Exkurs: Datenbank "),r("a",[r("a",{attrs:{href:"#ref_gree15"}},[e._v("[GREE15]")])]),r("a",[r("a",{attrs:{href:"#ref_bege18"}},[e._v("[BEGE18]")])])]),r("p",[e._v("Allgemein kann man eine Datenbank als eine organisierte Sammlung von elektronischen Daten interpretieren, welche von einem Datenbankmanagementsystem (DBMS) zentral verwaltet werden.\nDabei sollen hierbei viele Datensätze effizient, konsistent und dauerhaft verwaltet werden können. Zudem können Datenbanken logische Zusammenhänge zwischen den einzelnen Daten abbilden.\nBeispielsweise können sie in Tabellen abgebildet werden, wobei jede Reihe eine Entität und jede Spalte ein Attribut, welches die Entität beschreibt, darstellt.\nZur Manipulation der Datenbanken sind Transaktionen notwendig. Dabei beinhaltet eine Transaktion ein oder mehrere Manipulationen der Datenbank (Datensatz anlegen, ändern oder löschen).\nBei der Ausführung der Transaktion wird sie auf ihre Richtigkeit überprüft und entweder als ganzes oder gar nicht ausgeführt (getreu dem ACID-(bei RDBs) bzw. dem BASE-Theorem (bei NoSQL-DBs) "),r("a",[r("a",{attrs:{href:"#ref_wiki18a"}},[e._v("[WIKI18]")])]),e._v("). Die Richtigkeit wird u.a. durch Regeln wie Unique Keys, Forein keys oder Check constraints.\nWichtig dabei ist, dass die Datenbank nach jeder Transaktion einen validen Zustand erreicht und entsprechend konsistente Daten beinhaltet.")]),r("h3",{attrs:{id:"distributed-ledger-technologie-dlt-metz18"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#distributed-ledger-technologie-dlt-metz18","aria-hidden":"true"}},[e._v("#")]),e._v(" Distributed Ledger Technologie (DLT) "),r("a",[r("a",{attrs:{href:"#ref_metz18"}},[e._v("[METZ18]")])])]),r("p",[e._v("Blockchain basiert auf der Distributed Ledger Technologie, welche das Verarbeiten und Speichern von Daten ermöglicht.\nSie kann auch als eine dezentrale Datenbank verstanden werden, da sie im Gegensatz zu herkömmlichen verteilten (zentralen) Datenbanken gemeinsame Zugriffsrechte für mehrere Netzwerkteilnehmer auf Datensätze erlaubt, was eine zentrale Instanz zur Datenverwaltung überflüssig macht.\nDie Datenänderungen werden per Transaktion an die anderen Teilnehmer geschickt, wobei diese entscheiden können, ob die Transaktion für gültig erklärt wird oder nicht."),r("br"),e._v("\nBezüglich der Zugangsmöglichkeiten lassen sich die Ledgers folgend unterteilen:")]),r("table",[r("thead",[r("tr",[r("th",[e._v("Zugangsmöglichkeit")]),r("th")])]),r("tbody",[r("tr",[r("td",[e._v("Unpermissioned Ledger")]),r("td",[e._v("Diese Ledger sind am bekanntesten (z.B. durch Bitcoin). Sie sind prinzipiell für alle zugänglich und erfordern keine Authentifizierung. Entsprechend wird PoW als Konsensveriante eingesetzt, sodass kein Vertrauen zwischen den Teilnehmern notwendig ist.")])]),r("tr",[r("td",[e._v("Permissioned Legder")]),r("td",[e._v("Bei diesen Ledgern  müssen sich die Teilnehmer registriert sein und entsprechende Auflagen(z.B. bzgl. Vertrauen) erfüllen, damit sie an dem Konsens teilnehmen dürfen. Dadurch können PoS oder PBFT-Mechanismen eingesetzt werden, welche im Gegensatz zu PoW  Rechenkapazitäten sparen.")])])])]),r("h3",{attrs:{id:"abgrenzung-zu-datenbanken"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#abgrenzung-zu-datenbanken","aria-hidden":"true"}},[e._v("#")]),e._v(" Abgrenzung zu Datenbanken")]),r("p",[e._v("Prinzipiell sind Distributed Ledger verteilte Datenbanken, welchen Nutzern, die kein richtiges Vertrauen ineinander haben, einen Konsens über den Inhalt und der Verwaltung der Datenbank ermöglichen. "),r("a",[r("a",{attrs:{href:"#ref_brow16"}},[e._v("[BROW16]")])]),r("a",[r("a",{attrs:{href:"#ref_cola18"}},[e._v("[COLA18]")])]),e._v("\nIm Gegensatz verwalten verteilte Datenbanken im herkömmlichen Sinne ihre Daten zentral und synchonisieren die Daten auf den verschiedenen Standorten periodisch. "),r("a",[r("a",{attrs:{href:"#ref_itwi18"}},[e._v("[ITWI18]")])])]),r("table",[r("thead",[r("tr",[r("th",[r("img",{attrs:{src:i(80),alt:"Verschiedene Typologien"}})]),r("th",[r("img",{attrs:{src:i(79),alt:"Verschiedene Typologien"}})])])]),r("tbody",[r("tr",[r("td",[e._v("verteilte Datenbank "),r("a",[r("a",{attrs:{href:"#ref_brow16"}},[e._v("[BROW16]")])])]),r("td",[e._v("distributed Ledger "),r("a",[r("a",{attrs:{href:"#ref_brow16"}},[e._v("[BROW16]")])])])])])]),r("h2",{attrs:{id:"verteilte-systeme"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#verteilte-systeme","aria-hidden":"true"}},[e._v("#")]),e._v(" Verteilte Systeme")]),r("p",[e._v("In diesem Kapitel soll definiert werden, was ein verteiltes System in Bezug auf die Blockchain ist und welche Probleme\ngelöst werden müssen, damit Vertrauen zwischen den einzelnen Nodes aufgebaut werden kann. Zudem sollen die gebräuchlichsten\nKonsens-Algorithmen erläutert werden, welche zurzeit von den größten Blockchain-Netzwerken benutzt werden.")]),r("h3",{attrs:{id:"was-ist-ein-verteiltes-system"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#was-ist-ein-verteiltes-system","aria-hidden":"true"}},[e._v("#")]),e._v(" Was ist ein verteiltes System")]),r("p",[e._v("Ein verteiltes System ist prinzipiell eine Ansammlung von Computern, welche untereinander Nachrichten austauschen\nkönnen. Das Medium, über den dieser Austausch stattfindet, ist dabei unbedeutend. Heutzutage wird für den Nachrichtenaustausch\nin den allermeisten Fällen das Internet genutzt, da hier Rechner auf der Welt miteinander kommunizieren können und\ndie geschaffene Infrastruktur einen einfachen Zugang ermöglicht. Zudem wird ein verteiltes System darüber definiert, dass ein Benutzer das\nSystems als ein einziges System sieht, egal mit welcher Node beziehungsweise Computer im Systems er sich verbindet.")]),r("p",[e._v("Verteilte Systeme können verschiedene Typologien haben. Eine Topologie beschreibt, in welcher Weise die Nodes im System miteinander verbunden\nsind.\n"),r("img",{attrs:{src:i(78),alt:"Verschiedene Typologien"}})]),r("p",[e._v("Beispielsweise kennt eine Node in einem vollvermaschten System jede andere Node und kann so auf direktem Wege miteinander kommunizieren.\nDie direkte Kommunikation ist einer der Vorteile dieser Topologie. Wenn jedoch eine neue Node dem Netzwerk beitreten will, muss nicht nur\ndie neue Node alle bereits im Netzwerk bestehenden Nodes kennenlernen, auch müssen die bereits bestehenden Nodes über den Betritt informiert\nwerden. Je nach größe des Netzwerkes und wie oft eine neue Node dem Netzwerk betritt kann dies zu einem Problem werden, wo das System nur noch\ndamit beschäftigt ist die Liste der Nodes aktuell zu halten.")]),r("p",[e._v("Bei den meisten Blockchain-Protokollen wird auf eine Abwandlung der vollvermaschten Topologie zurückgegriffen. Es kommt ein vermaschtes Netzwerk\noder auch Peer-to-Peer (P2P) Netzwerk zum Einsatz. Dabei können neue Nodes wie bei einem vollvermaschten Netz von jeder anderen Node\nhinzugefügt werden, allerdings können nicht alle Nodes eines Netzwerkes direkt miteinander kommunizieren. Stattdessen steht jede Node mit\neiner Handvoll anderer Nodes in Kontakt. Soll eine Nachricht zu einer Node gesendet werden, welche nicht im direkten Kontakt mit der Absendernode\nsteht, so wird diese Nachricht vom Netzwerk selbst weitergeleitet, bis die Nachricht eine Node erreicht, welche in Kontakt mit der Empfängernode\nsteht.")]),r("h3",{attrs:{id:"die-blockchain"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#die-blockchain","aria-hidden":"true"}},[e._v("#")]),e._v(" Die Blockchain")]),r("p",[e._v("Die Blockchain ist ein verteiltes Kontobuch (Ledger), in welchem jede Transaktion von jedem Nutzer verzeichnet ist. Eine bestimmte Anzahl an\nTransaktionen werden zu Blöcken zusammengefasst. Diese Blöcke werden miteinander verkettet. Dies bedeutet, dass der Hash eines Nachfolgerblockes\nim Header des Vorgängerblockes gespeichert wird. Über die Blockchain kann so die Reihenfolge\nder Transaktionen gespeichert werden. In einem verteilten Blockchain System hält jede Node eine Kopie der Blockchain. Zudem kann jede Node\nTransaktionen eines Nutzers entgegennehmen und diese im Netzwerk bekannt machen. Das Problem, welches sich nun jeder Blockchain-Algorithmus lösen\nmuss, ist, welche Node die gesammelten Transaktionen zu einem Block zusammenfassen und der Blockchain hinzufügen darf. Damit das Protokoll\nfunktioniert müssen alle Nodes im Netzwerk sich auf eine einzige Blockchain einigen. Hinzu kommt, dass Nodes dem Netzwerk frei betreten können,\nohne das eine zentrale Stelle die Node überprüft hat. So kann keiner Node im Netzwerk vertraut werden. Es muss also ein Weg gefunden werden, der\nes dem Netzwerk erlaubt Blöcke von einer Node zur Kette hinzufügen zu lassen, obwohl die Absichten der hinzufügenden Node nicht bekannt sind.\nZudem muss geregelt werden was passiert, wenn es zu Unstimmigkeiten in der Blockchain kommt, wenn beispielsweise zwei Blöcke zur selben Zeit gefunden\nwurden und es zu einer gabelung (fork) in der Blockchain kommt. Bei einem fork würden zwei verschiedenen Blöcke am Ende der Kette stehen. Dadurch\nkönnten Währungen doppelt ausgegeben werden, falls in den beiden letztens Blöcken Transaktionen von einem Konto zu zwei verschiedenen Empfängern\nverzeichnet sind. Die Aufgabe eines Konsens-Algorithmus ist es deshalb zu einer eindeutigen, gabelungsfreien Blockchain zu gelangen, auf welche\nsich alle Nodes im Netzwerk einigen können.")]),r("h3",{attrs:{id:"konsens-algorithmen"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#konsens-algorithmen","aria-hidden":"true"}},[e._v("#")]),e._v(" Konsens-Algorithmen")]),r("p",[e._v("Es gibt verschiedene Wege zu einem Konsens in einem verteilten System zu kommen. Viele Cryptowährungen unterscheiden sich alleine in ihrem\nKonsens-Algorithmus und versuchen so ein Alleinstellungsmerkmal zu erlangen. Zu den gebräuchlichsten Konsens-Algorithmen zählen:")]),r("ul",[r("li",[e._v("Proof-of-Work")]),r("li",[e._v("Proof-of-Stake")]),r("li",[e._v("Practical Byzantine Fault Tolerance")]),r("li",[e._v("Proof of Elapsed Time")]),r("li",[e._v("Federated Byzantine Agreement")])]),r("p",[e._v("Diese Algorithmen werden unteranderem von jeweils Bitcoin, Etherium, Ripple, InterLedger (Hyperledger) und Hyperledger Fabric verwendet.")]),r("h4",{attrs:{id:"proof-of-work"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#proof-of-work","aria-hidden":"true"}},[e._v("#")]),e._v(" Proof-of-Work")]),r("p",[e._v("Wie bei allen Blockchain-Protokollen wird auch beim Proof-of-Work Transaktionen zu Blöcken zusammengefasst. Jede Node die eine Transaktion empfängt\nspeichert diese zunächst in einem Cache und leitet sie an alle anderen Nodes im Netzwerk weiter. Liegen genug Transaktionen in einem Cache können\ndiese zu einem Block zusammengefasst werden. Alle Nodes fassen Transaktionen in einem eigenen Block zusammen. Dies hat zur Folge, dass nicht alle Nodes\ndie gleichen Transaktionen in ihrem Block aufgenommen haben, da Transaktionen beim verschicken zwischen Nodes verloren gegangen sein können oder es\ndurch eine Verzögerung nicht in den aktuellen Block geschafft haben.")]),r("p",[e._v("Nachdem eine Node einen Block zusammengefasst hat, versucht sie einen Nonce zu finden, welcher, gehasht mit dem Blockhash, einen neuen Hashwert\nbildet. Dieser neu gebildete Hashwert muss allerdings eine bestimmte Anzahl von anführenden Nullen besitzen um vom Netzwerk als der rechtmäßige\nNachfolgerblock anerkannt zu werden. Die Anzahl der führenden Nullen des Hashes wird Schwierigkeit (Difficulty) genannt. Diese Schwierigkeit passt\nsich dynamisch an das Netzwerk an, sodass mit sich ändernder Rechenleistung der zeitliche Abstand der Blockerstellung gleichbleibend ist.\nDer eigentliche zeitliche Abstand ist je nach Implementierung des Proof-of-Work unterschiedlich. Im Falle von Bitcoin beträgt er 10 Minuten.")]),r("p",[e._v("Der neu gefundene Block wird von der findenden Node direkt in die Kopie ihrer Blockchain eingefügt und anschließend an alle weiteren Nodes gesendet.\nNodes die den neuen Block empfangen prüfen ihn auf seine Richtigkeit und fügen ihn dann zu ihrer eigenen Kopie der Blockchain hinzu. Sollte es in der\neigenen Blockchain bereits einen Nachfolgerblock geben, weil zwei Nodes zur selben Zeit einen Block gefunden haben, werden zunächst beide Blöcke als Nachfolger\nbehandelt. Nodes können frei entscheiden welchen der beiden Nachfolgerblöcke sie als legitim ansehen. Wird allerdings ein neuer Block gefunden welcher die\nBlockchain um einen Block verlängert, so wird nur der längste Teil der Blockchain als legitim angesehen und der andere Teil der Blockchain wird verlassen.\nEs kann vorkommen das eine Gabelung in der Kette zwei bis drei Blöcke erreicht, bevor ein Ast sich als legitim herrausstellt. Transaktionen, die nur\nauf dem abgeschnittenen Ast verzeichnet waren, werden somit ungültig. Aufgrund dessen sollte bei einer Transaktion gewartet werden bis mindestens sechs\nBlöcke nach der eigentlichen Transaktion angehängt worden sind.")]),r("p",[e._v("Aufgrund der Tatsache das die Findung eines Blockes Rechenleistung benötigt, kann davon ausgegangen werden das keine einzelne Person alle Blocks zur\nKette hinzufügen kann. Da nur die längste Kette von allen Nodes als legitim angesehen wird, müsste eine Person alleine jeden einzelnen neuen Block\nfinden, damit seine eigene Blockchain schneller wächst als die Blockchain an der das Rest des Netzwerkes arbeitet. Durch diesen Umstand wird die\nDezentralisierung gewährleistet. Sollte allerdings eine Person oder Organisation mehr als 51% der Rechenleistung kontrollieren, könnte diese\nOrganisation den Verlauf der Blockchain manipulieren. "),r("a",[r("a",{attrs:{href:"#ref_naka08"}},[e._v("[NAKA08]")])])]),r("h3",{attrs:{id:"proof-of-stake"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#proof-of-stake","aria-hidden":"true"}},[e._v("#")]),e._v(" Proof-of-Stake")]),r("p",[e._v("Auch bei dem sogenannten Proof-of-Stake geht es darum einen Block mit Transaktionen zu finden, auf den sich das gesamte Netzwerk einigen kann.\nAnders als bei dem Proof-of-Work Algorithmus muss dazu allerdings kein Hashwert erraten werden. Beim Proof-of-Stake wird eine Node im Netzwerk\nzufällig ausgelost. Die ausgeloste Node darf dann einen neuen Block zur Blockchain hinzufügen. Zusätzlich erhält die ausgewählte Node eine\nBelohnung (Blockreward) für das hinzufügen des Blockes. Die Chancen der Nodes auf eine Auswahl kann gesteigert werden, fall die Nodes einen\nEinsatz (Stake) besitzen. Je größer dabei die Anzahl der gehaltenen Coins ist, desto höher ist die Chance ausgewählt zu werden und den neuen Block\nzu stellen.")]),r("p",[e._v('Der Hintergedanke beim Proof-of-Stake ist der, das je größer das Investment in eine Cryptowährung ist, desto größer ist auch der Anreiz des\nInvestors in die "Gesundheit" der Währung. Der Wert einer Cryptowährung ist über das Vertrauen der Anleger bestimmt. Sollten große\nInvestoren, die aufgrund ihres gehaltenen Vermögens häufig einen Block stellen, versuchen die Chain zu manipulieren, so würden sie beim\nAuffliegen von diesen manipulationen auf Grund des Vertrauensverlusts selber Geld verlieren.')]),r("p",[e._v('In der Praxis zeigt sich allerdings ein anders Bild. Der Proof-of-Stake zeigte sich anfällig für das "Nothing at Stake" Problem. Auch wenn\nGroßinvestoren im Allgemeinfall einen ökonomischen Anreiz haben die Blockchain frei von forks zu halten, so gibt es keinen eingebauten\nmechanischen Mechanismus der Miner davon abhält jeden Block zu validieren um an die Blockreward zu gelangen. '),r("a",[r("a",{attrs:{href:"#ref_siim17"}},[e._v("[SIIM17]")])])]),r("h3",{attrs:{id:"practical-byzantine-fault-tolerance"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#practical-byzantine-fault-tolerance","aria-hidden":"true"}},[e._v("#")]),e._v(" Practical Byzantine Fault Tolerance")]),r("p",[e._v("Der Practical Byzabtibe Fault Tolerance (PBFT) ist der erste hier vorgestellte Konsens-Algorithmus welchem Nodes nicht frei beitreten können (permissioned).\nWährend bei PoW und PoS jeder Computer im Netzwerk beim Finden eines neuen Blockes mithelfen kann, so gibt es beim PBFT ein zentrales Netzwerk an\nNodes, welche die Entscheidung über einen neuen Block treffen. Diese Nodes wurden von einer zentralen Organisation oder Komitee bestimmt. Diese\nNodes bilden ein voll vermaschtes Netzwerk und sind somit alle untereinander bekannt.")]),r("p",[e._v("Unter diesen zentralen Node wird periodisch eine Anführernode (Primary) gewählt. Die Auswahl des Primary erfolgt in der Regel zufällig. Nur der\nPrimary darf neue Blöcke erstellen und den andern Nodes (Replicas) im zentralen Netzwerk als Vorschlag unterbreiten. Dabei wird der vorgeschlagene\nBlock in drei Stufen vom zentralen Netzwerk überprüft: Pre-prepared, prepared und commited. In der Pre-prepared Phase wird der neue Block an alle\nReplicas gesendet. Der Block wird von allen anderen Replicas überprüft. Das Ergebnis dieser Überprüfung wird wiederum an alle anderen Replicas\nper Broadcast übermittelt. Auf diese Weise erhalten alle Replicas die Ergebnisse der anderen Replicas. Dies ist der prepared Schritt. Stimmen\nmindestens 2/3 alle Ergebnisse der Replicas überein, so wird der Block anerkannt. In diesem Fall broadcastet jede Node im Netzwerk, dass der\nneue Block angenommen wurde. Dies ist der Commit Schritt. Damit wird der Block sowohl beim Primary als auch bei den Replicas in die Blockchain\naufgenommen.")]),r("p",[e._v('Die Fault Tolerance im Namen des Algorithmus kommt daher, dass es auch zu einem Konsens kommt falls eine oder mehrere Node nicht richtig\nfunktionieren. Dies kann durch einen "natürlichen" Computerfehler oder aber auch durch böswillige Absicht passieren. Über die Formel\nn = 3f+1 kann herausgefunden werden, wie viele fehlerhafte Nodes das System aushalten kann. Dabei ist n die Anzahl der gesamt Nodes und\nf die Anzahl der Fehlerhaften Nodes. In einem System mit 4 Nodes könnte also eine Node fehlerhaft sein. Über die 3 funktionieren Nodes kann\neine 3/4 Mehrheit erreicht werden, was zu einem Konsens führen würde. Bei 2 fehlerhaften Node würde die 2/3 nicht erreicht werden können. '),r("a",[r("a",{attrs:{href:"#ref_cast99"}},[e._v("[CAST99]")])])]),r("h3",{attrs:{id:"proof-of-elapsed-time"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#proof-of-elapsed-time","aria-hidden":"true"}},[e._v("#")]),e._v(" Proof of Elapsed Time")]),r("p",[e._v("Der Proof-of-Elapsed-Time (PoET) ist ein von Intel entwickelter Konsens Algorithmus. Dabei erstellen Nodes einen Timer, welcher eine zufällige\nAblaufzeit besitzt. Falls der Timer einer Node abgelaufen ist, darf diese Node einen Block zur Blockchain hinzufügen. Die Schwierigkeit die es\nzu überwinden gilt ist zum einen wie die Erstellung des Timers gehandhabt wird und zum anderen wie kontrolliert werden kann das die gewählte Zeit\nauch wirklich gewartet worden ist. Sollten diese Bedingungen nicht überprüft werden könnten Node einfach eine kurze Zeit als Timer wählen oder die\nZeit schlicht nicht warten.")]),r("p",[e._v("Um dem entgegenzuwirken stellt Intel in ihren Prozessoren ein spezielles Instruktionsset names Intel Software Guard Extensions (SGX) zur Verfügung.\nMit Hilfe von SGX ist es möglich Code ausführen zu lassen. Nach Ablauf des Codes wird ein Zertifikat erstellt, welches nachweist das der Code ohne\nVeränderung von außen ausgeführt wurde. Die Erstellung des Timers wird deshalb von der SGX überwacht und ein neuer Block wird nur dann vom Netzwerk\nakzeptiert falls ein Zertifikat beigelegt wird was die korrekte Erstellung und Ablauf des Timers belegt.")]),r("p",[e._v("Ein Problem mit dem PoEL ist, dass dieser momentan nur auf neueren CPUs von der Firma Intel ausgeführt werden kann. So werden alle anderen Node\naufgrund ihres Prozessors ausgeschlossen. Auch wenn andere Hersteller ihre CPU mit einem kompatiblen Instruktionsset ausrüsten bleibt der\nNachteil das ein Teil des Vertrauens nicht von dem Netzwerk selber aufgebaut wird, sondern von einer zentralen Stelle, in diesem Fall der\nCPU Hersteller, erbracht wird. Dieser Umstand sollte genau genommen von einem Konsens Algorithmus vermieden werden, da im Falle von PoET ein\nPotentieller Schwachpunkt direkt auf der Hand liegt, nämlich der Prozessor selbst. "),r("a",[r("a",{attrs:{href:"#ref_rile18"}},[e._v("[RILE18]")])])]),r("h3",{attrs:{id:"federated-byzantine-agreement"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#federated-byzantine-agreement","aria-hidden":"true"}},[e._v("#")]),e._v(" Federated Byzantine Agreement")]),r("p",[e._v("Im Federated Byzantine Agreement (FBA) versucht das Netzwerk über ein Mehrheitsvotum einen nachfolgenden Block zu finden. Ein einfaches Mehrheitsvotum in einem dezentralen System bringt allerdings den Nachteil mit sich, dass  bei einem Netzwerk von vielen tausend Nodes ein gewaltiger Overhead an zu verschickenden Nachrichten entsteht. Um diesen Overhead zu verringern werden von den Nodes im Netzwerk Teilmengen gebildet. Bei der Erstellung einer Node muss deshalb vom Ersteller eine Liste mit bereits vorhandenen Nodes im Netzwerk angelegt werden. Des Weiteren müssen mindestens 40 Prozent der angegebenen Nodes auf Listen von bereits bestehenden Nodes stehen. Die Mindestanzahl an Nodes auf dieser Liste liegt bei 1000 Nodes, dies gewährleistet das alle Nodes im Netzwerk erreichbar sind. Diese Liste an Nodes sind nun Validatoren der neuen Node.")]),r("p",[e._v("Wie bei anderen Konsens Algorithmen auch werden zunächst alle empfangen Transaktionen von jeder Node zu einem Block zusammengefasst. Dieser Block wird anschließend alle Node auf der inital definierten Liste verschickt. Nun besitzt jede Node\neine Sammlung an Blöcken, zu welchen sie eine Stimme abgeben dürfen. Erhält ein Block einer Node mindestens 50 Prozent der Stimmen im ersten Wahlgang von seinen Validatoren, so kommt der Block in die nächste Runde des Wahlvorgangs. Ein Wahlvorgang geht über vier Runden, wobei in jeder Runde der Grenzwert für eine Entscheidung erhöht wird. Am Ende eines Wahlgangs müssen mindestens 80 Prozent der Nodes für einen Block gestimmt haben, damit dieser hinzugefügt werden kann. "),r("a",[r("a",{attrs:{href:"#ref_schw14"}},[e._v("[SCHW14]")])])]),r("h3",{attrs:{id:"ubersich-uber-die-vorgestellten-algorithemen"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ubersich-uber-die-vorgestellten-algorithemen","aria-hidden":"true"}},[e._v("#")]),e._v(" Übersich über die Vorgestellten Algorithemen")]),r("table",[r("thead",[r("tr",[r("th",[e._v("Algorthmus")]),r("th",[e._v("PoW")]),r("th",[e._v("PoS")]),r("th",[e._v("PBFT")]),r("th",[e._v("PoET")]),r("th",[e._v("FBA")])])]),r("tbody",[r("tr",[r("td",[e._v("Erlaubt Anonyme Nodes")]),r("td",[e._v("Ja")]),r("td",[e._v("Ja")]),r("td",[e._v("Nein")]),r("td",[e._v("Ja")]),r("td",[e._v("Ja")])]),r("tr",[r("td",[e._v("Energieverbrauch")]),r("td",[e._v("Hoch")]),r("td",[e._v("Moderat")]),r("td",[e._v("Niedrig")]),r("td",[e._v("Niedrig")]),r("td",[e._v("Moderat")])]),r("tr",[r("td",[e._v("Hauptnachteil")]),r("td",[e._v("Energieverbrauch")]),r("td",[e._v("Nothing-at-Stake Problem")]),r("td",[e._v("Nicht dezentral")]),r("td",[e._v("CPU Hersteller ist Source of Trust")]),r("td",[e._v("Nachrichten Overhead")])]),r("tr",[r("td",[e._v("Grenzwert Angrifftoleranz")]),r("td",[e._v(">50% Rechenleistung")]),r("td",[e._v(">50% Kapital")]),r("td",[e._v("<33.3% Angreifernodes")]),r("td",[e._v("-")]),r("td",[e._v("<20% Angreifernodes")])]),r("tr",[r("td",[e._v("Referenz Implementierung")]),r("td",[e._v("Bitcoin")]),r("td",[e._v("Peercoin")]),r("td",[e._v("Hyperledger Fabric")]),r("td",[e._v("Sawtooth")]),r("td",[e._v("Ripple")])])])]),r("h2",{attrs:{id:"dezentrale-anwendungen"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dezentrale-anwendungen","aria-hidden":"true"}},[e._v("#")]),e._v(" Dezentrale Anwendungen")]),r("p",[e._v("Autor: Patrick Starzynski")]),r("h3",{attrs:{id:"dapps"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dapps","aria-hidden":"true"}},[e._v("#")]),e._v(" DApps")]),r("h4",{attrs:{id:"definition"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#definition","aria-hidden":"true"}},[e._v("#")]),e._v(" Definition")]),r("p",[e._v("Dezentrale Anwendungen (DApps) stellen eine Möglichkeit für die Umsetzung skalierbarer Applikationen durch die Blockchain-Technologie dar.\nWährend konventionelle Anwendung maßgeblich durch einzelne Anbieter betrieben werden, werden DApps auf einer Vielzahl von Anwendern verteilt.\nDurch die Verteilung werden die Anwenderdaten nicht zentralisiert gespeichert und verwaltet, wodurch durch das Peer-to-Peer-Modell ein bspw. serverbedingter Ausfall\nverhindert werden kann.\nDabei muss eine dezentrale Anwendung vier grundlegende Kriterien erfüllen:")]),r("ol",[r("li",[e._v("Die Anwendung muss quelloffen und autonom funktionsfähig sein.")]),r("li",[e._v("Die Daten und Protokolle der Operationen müssen kryptografisch mittels einer dezentralen und\nöffentlichen Blockchain gespeichert werden.")]),r("li",[e._v("Die Applikation muss kryptografische Token nutzen, die zum Zugang zur Anwendung genutzt werden. Dabei werden die Miner, die zur Tokengenerierung beigetragen haben entsprechend entlohnt.")]),r("li",[e._v("Die Anwendung muss die genutzten Token unter Berücksichtigung kryptografischer Algorithmen und Konsensverfahren, z.B. durch Proof of Work, generieren können.")])]),r("p",[e._v("Durch das Einhalten dieser Kriterien wird eine Kontrolle durch ein einzelnes Gremium, wie z.B. ein Unternehmen, verhindert.")]),r("h4",{attrs:{id:"klassen"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#klassen","aria-hidden":"true"}},[e._v("#")]),e._v(" Klassen")]),r("p",[e._v("Zur Klassifizierung von dezentralen Anwendungen werden drei verschiedene Typen berücksichtigt.")]),r("ol",[r("li",[e._v("Type I Anwendungen nutzen eine eigene Blockchain, darunter fallen auch die sogenannten Altcoins, die durch Forks des Bitcoins entstanden sind.")]),r("li",[e._v("Type II Anwendungen sind Protokolle die die Blockchain einer Type I Anwendung nutzen. Jedoch werden die Token für die Nutzung der Anwendung benötigt. So sind Type II Anwendungen aufbauend auf Type I Anwendungen.")]),r("li",[e._v("Type III Anwendungen nutzen die Protokolle einer Type II Anwendung.")])]),r("h4",{attrs:{id:"entwicklung-einer-dezentralen-anwendung"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#entwicklung-einer-dezentralen-anwendung","aria-hidden":"true"}},[e._v("#")]),e._v(" Entwicklung einer dezentralen Anwendung")]),r("p",[e._v("Die Entwicklung einer dezentralen Anwendung wird üblicherweise in drei Teilschritte gegliedert:")]),r("ol",[r("li",[e._v("Es wird ein Whitepaper veröffentlicht, dass die Funktionalitäten und Mechanismen der Anwendung beschreibt.")]),r("li",[e._v("Initiale Token werden verteilt. Des Weiteren wird, wie z.B. beim Bitcoin, eine Software veröffentlicht, die als Referenzprogramm zum Minen genutzt werden kann.")]),r("li",[e._v("Die Besitzanteile der Anwendung werden verbreitet, durch diese Verbreitung wird die Anwendung zunehmend dezentralisiert.")])]),r("h3",{attrs:{id:"web-3-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#web-3-0","aria-hidden":"true"}},[e._v("#")]),e._v(" Web 3.0")]),r("h2",{attrs:{id:"literaturverzeichnis"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#literaturverzeichnis","aria-hidden":"true"}},[e._v("#")]),e._v(" Literaturverzeichnis")]),r("p",[r("a",{attrs:{name:"ref_baum14"}},[e._v("[BAUM14]")]),e._v(": Baumann, Ulrike ; Franz, Elke ; Pfitzmann, Andreas: Kryptographische Systeme. Berlin: Springer Vieweg, 2014, ISBN: 978-3-642-45332-8")]),r("p",[r("a",{attrs:{name:"ref_bege18"}},[e._v("[BEGE18]")]),e._v(": Begerow, Markus: Datenbank – Was ist eine Datenbank?  URL: http://www.datenbanken-verstehen.de/datenbank-grundlagen/datenbank/ (abgerufen am 29.04.2018)")]),r("p",[r("a",{attrs:{name:"ref_brow16"}},[e._v("[BROW16]")]),e._v(": Brown, Richard 'Gendal': On Distributed Databases and Distributed Ledgers  URL: https://gendal.me/2016/11/08/on-distributed-databases-and-distributed-ledgers/ (abgerufen am 29.04.2018)")]),r("p",[r("a",{attrs:{name:"ref_bsi18a"}},[e._v("[BSI18a]")]),e._v(":  Bundesamt für Sicherheit in der Informationstechnik (BSI) - Referat B 23, Cyber-Sicherheit für den Bürger und Öffentlichkeitsarbeit: IT-Sicherheit: 4 Glossar und Begriffsdefinitionen. Bonn, 2018, URL: https://www.bsi.bund.de/DE/Themen/ITGrundschutz/ITGrundschutzKataloge/Inhalt/Glossar/glossar_node.html (abgerufen am 29.04.2018)")]),r("p",[r("a",{attrs:{name:"ref_bsi18b"}},[e._v("[BSI18b]")]),e._v(":  Bundesamt für Sicherheit in der Informationstechnik (BSI), Sicherheitsmechanismen in elektronischen Ausweisdokumenten: Public Key Infrastructure (PKI). Bonn, 2018, URL: https://www.bsi.bund.de/DE/Themen/DigitaleGesellschaft/ElektronischeIdentitaeten/Sicherheitsmechanismen/sicherPKI/pki_node.html (abgerufen am 08.05.2018)")]),r("p",[r("a",{attrs:{name:"ref_bsi18c"}},[e._v("[BSI18c]")]),e._v(":  Bundesamt für Sicherheit in der Informationstechnik (BSI), BSI – Technische Richtlinie: Kryptographische Verfahren: Empfehlungen und Schlüssellängen. Kürzel: BSI TR-02102-1, Bonn, 2018")]),r("p",[e._v('<a name"ref_cast99">[CAST99]'),e._v(": Castro, Miguel; Liskov, Barbara: Practical Byzantine Fault Tolerance URL:\nhttp://pmg.csail.mit.edu/papers/osdi99.pdf")]),r("p",[r("a",{attrs:{name:"ref_cola18"}},[e._v("[COLA18]")]),e._v(": Complexity Labs: Distributed Ledger  URL: https://www.youtube.com/watch?v=Cqk7PN8f8gM (abgerufen am 29.04.2018)")]),r("p",[r("a",{attrs:{name:"ref_docu18"}},[e._v("[DOCU18]")]),e._v(":  DocuSign Inc.: What are digital signatures?, San Francisco, 2018, URL: https://www.docusign.com/how-it-works/electronic-signature/digital-signature/digital-signature-faq (abgerufen am 04.05.2018)")]),r("p",[r("a",{attrs:{name:"ref_gree15"}},[e._v("[GREE15]")]),e._v(": Greenspan, Gideon: Private blockchains are more than “just” shared databases.  URL: https://www.multichain.com/blog/2015/10/private-blockchains-shared-databases/ (abgerufen am 29.04.2018)")]),r("p",[r("a",{attrs:{name:"ref_itwi18"}},[e._v("[ITWI18]")]),e._v(": itwissen.info: Verteilte Datenbank  URL: https://www.itwissen.info/Verteilte-Datenbank-distributed-database-DDB.html?query=Datenbank (abgerufen am 29.04.2018)")]),r("p",[r("a",{attrs:{name:"ref_kuesters11"}},[e._v("[KÜST11]")]),e._v(": Küsters, Ralf ; Wilke, Thomas: Moderne Kryptographie : Eine Einführung. 1. Aufl. Wiesbaden : Vieweg + Teubner, 2011, ISBN: 978-3-519-00509-4")]),r("p",[r("a",{attrs:{name:"ref_metz18"}},[e._v("[METZ18]")]),e._v(": Metzger, Jochen: Distributed Ledger Technologie (DLT)  URL: https://wirtschaftslexikon.gabler.de/definition/distributed-ledger-technologie-dlt-54410 (abgerufen am 29.04.2018)")]),r("p",[e._v('<a name "ref_naka08">[NAKA08]'),e._v(": Nakamoto, Satoshi: Bitcoin: A Peer-to-Peer Electronic Cash System URL:\nhttps://bitcoin.org/bitcoin.pdf")]),r("p",[r("a",{attrs:{name:"ref_paar16"}},[e._v("[PAAR16]")]),e._v(": Paar, Christof ; Pelzl, Jan: Kryptografie verständlich : Ein Lehrbuch für Studierende und Anwender. Berlin, Heidelberg : Springer Vieweg, 2016, ISBN: 978-3-662-49296-3")]),r("p",[r("a",{attrs:{name:"ref_rile18"}},[e._v("[RILE18]")]),e._v(": Rile, Kynan: Understanding Hyperledger Sawtooth — Proof of Elapsed Time URL:\nhttps://medium.com/kokster/understanding-hyperledger-sawtooth-proof-of-elapsed-time-e0c303577ec1 (Abgerufen 05.05.2018)")]),r("p",[r("a",{attrs:{name:"ref_schw14"}},[e._v("[SCHW14]")]),e._v(": Schwartz, David ; Youngs, Noah ; Britto Arthur: The Ripple Protocol Consensus Algorithm URL: https://ripple.com/files/ripple_consensus_whitepaper.pdf (abgerfufen 10.05.2018)")]),r("p",[r("a",{attrs:{name:"ref_siim17"}},[e._v("[SIIN17]")]),e._v(": Siim, Janno: Proof-of-Stake - Research Seminar in Cryptography URL:\nhttps://courses.cs.ut.ee/MTAT.07.022/2017_fall/uploads/Main/janno-report-f17.pdf")]),r("p",[r("a",{attrs:{name:"ref_ssl18"}},[e._v("[SSL18]")]),e._v(":  SSL2BUY LLC.: Symmetric vs. Asymmetric Encryption – What are differences?. Anaheim, 2018 URL: https://www.ssl2buy.com/wiki/symmetric-vs-asymmetric-encryption-what-are-differences (abgerufen am 04.05.2018)")]),r("p",[r("a",{attrs:{name:"ref_stop18"}},[e._v("[STOP18]")]),e._v(": Stobitzer, Christian: Symmetrische Verschlüsselung. Karlsruhe. URL: http://www.kryptowissen.de/symmetrische-verschluesselung.html (abgerufen am 27.04.2018)")]),r("p",[r("a",{attrs:{name:"ref_thom16"}},[e._v("[THOM16]")]),e._v(": Thompson, Collin : Private Blockchain or Database?  URL: https://www.linkedin.com/pulse/private-blockchain-database-collin-thompson (abgerufen am 29.04.2018)")]),r("p",[r("a",{attrs:{name:"ref_wiki18a"}},[e._v("[WIKI18a]")]),e._v(": Wikipedia, ACID. URL: https://de.wikipedia.org/wiki/ACID (abgerufen am 29.04.2018)")]),r("p",[r("a",{attrs:{name:"ref_wiki18b"}},[e._v("[WIKI18b]")]),e._v(": Wikimedia: Message authentication code. URL: https://en.wikipedia.org/wiki/Message_authentication_code (abgerufen am 04.05.2018)")])])}],t=i(0),s=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},r,!1,null,null,null);n.default=s.exports}}]);