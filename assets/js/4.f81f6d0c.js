(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{216:function(t,n,e){"use strict";e.r(n);var s=[function(){var t=this.$createElement,n=this._self._c||t;return n("h1",{attrs:{id:"functional-reactive-programming"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#functional-reactive-programming","aria-hidden":"true"}},[this._v("#")]),this._v(" Functional Reactive Programming")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"functional-programming-konzept"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#functional-programming-konzept","aria-hidden":"true"}},[this._v("#")]),this._v(" Functional Programming Konzept")])},function(){var t=this.$createElement,n=this._self._c||t;return n("ul",[n("li",[this._v("Wartbarer Code")]),n("li",[this._v("Wiederverwertbarer Code")]),n("li",[this._v("Verständlicher Code")])])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[t._v("Arbeiter")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" String name"),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" gehalt"),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("Arbeiter")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String _name"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" _gehalt"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{attrs:{class:"token keyword"}},[t._v("this")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" _name"),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{attrs:{class:"token keyword"}},[t._v("this")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gehalt "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" _gehalt"),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),e("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("gehaltsErhoehung")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" zuschlag"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{attrs:{class:"token keyword"}},[t._v("this")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gehalt "),e("span",{attrs:{class:"token operator"}},[t._v("+=")]),t._v(" zuschlag"),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("this")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gehalt"),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),e("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" String "),e("span",{attrs:{class:"token function"}},[t._v("toString")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("this")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),e("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('" verdient "')]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("this")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gehalt"),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("angestelltenListe Angestellter"),e("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" tempAngestellter"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    tempAngestellter"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("gehaltsErhoehung")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token number"}},[t._v("200")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("arbeiter "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"Alice"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),e("span",{attrs:{class:"token number"}},[t._v("10000.0")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"Bob"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("12500.0")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Funktionen verhalten sich im funktionalen Ansatz ähnlich wie mathemetische Funktionen. Bei einer mathematischen Funktion\nwird ein oder mehrere Eingabewerte genau einem Ausgabewert zugeordnet. Egal wie oft diese Funktion mit den selben\nEingabewerten berechnet wird, sie führt immer zu dem selben Ergebnis.\nDies trifft auch auf die Funktionen im funktionalen Ansatz zu: Mit den selben Eingabeparametern erhält der Aufrufer\njedes Mal den selben Rückgabewert. Dabei geht es vor allem darum, dass Funktionsaufrufe nicht von dem globalen State\nder Applikation abhängen sollen, welcher sich zur Laufzeit ändern kann. Ein Funktionsaufruf muss unabhängig vom State\nzu jeder Zeit vorhersagbar sein.\nEin weiterer Punkt der zum Aspekt der Reinheit einer Funktion gehört, ist das Auftreten von Seiteneffekten (Side effects).\nSeiteneffekte können vielfältig sein: Das Ändern einer globalen Variable im Funktionsaufruf, das Lesen aus einer Datei oder\ndas Werfen einer Exception. Beispielsweise kann das Lesen einer Datei in einer Funktion den Rückgabewert unabhängig"),n("br"),this._v("\nvon den übergebenen Parametern verändern, was nicht mehr der Definition einer reinen Funktion entsprechen würde.")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("gehaelter_erhoehen")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arbeiterListe"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" erhoehung"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" neueArbeiterListe "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" arbeiterListe"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("map")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arbeiter "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{attrs:{class:"token function"}},[t._v("gehalt_erhoehen")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("erhoehung"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" neueArbeiterListe"),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("gehalt_erhoehen")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arbeiter"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" erhoehung"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" neuerArbeiter "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arbeiter"),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token number"}},[t._v("0")]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arbeiter"),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token number"}},[t._v("1")]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("+=")]),t._v(" erhoehung"),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" neuerArbeiter"),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"reactive-programming"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reactive-programming","aria-hidden":"true"}},[this._v("#")]),this._v(" Reactive Programming")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Beim reaktiven Programmieren geht es darum, die Veränderung eines Zustandes zu beobachten und gegeben falls mit einer Veränderung\ndes eigenen Zustandes zu reagieren. Eine Zustandsänderung könnte zum Beispiel das Drücken eines Knopfes auf einer Benutzeroberfläche oder\naber das Abholen von Daten über einen HTTP Aufruf. Bibliotheken wie RxJS, xStream oder Most.js erlauben es von fast jeder Variable oder Objekt\nein Observable zu erstellen. So kann unter RxJS beispielsweise mit dem "),n("code",[this._v("just()")]),this._v(" Operator ein Observable von der Zahl 1 erstellt werden:")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" oneStream "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Rx"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Observable"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("just")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token number"}},[t._v("1")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\noneStream"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("subscribe")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("number "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("log")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("number"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \\\\prints "),e("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Ein Observable ist zu verstehen als ein Objekt, welche über einen bestimmten oder auch unbestimmten Zeitraum\nWerte ausgibt (emitted). Ein Observable ist somit zu stehen als ein Stream von Daten. Um an die emitteten Daten zu gelangen, kann dem Stream über die "),n("code",[this._v("subscribe()")]),this._v(" Methode gelauscht werden. Erst nachdem jemand auf den Stream\nsubscribed hat, fängt der Stream an, Werte auszugeben. Dabei wird der Callback innerhalb der Subscribe Methode\nin jedes mal ausgeführt, sobald ein neuer Wert von dem Stream emittet wurde.")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" numbers "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token number"}},[t._v("1")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{attrs:{class:"token number"}},[t._v("2")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{attrs:{class:"token number"}},[t._v("3")]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arrayStream"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Rx"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Observable"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("form")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("numbers"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\narrayStream"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("subscribe")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("number "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("log")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v('"Number "')]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" number"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),e("span",{attrs:{class:"token comment"}},[t._v("//Output:")]),t._v("\n"),e("span",{attrs:{class:"token comment"}},[t._v("//Number 1")]),t._v("\n"),e("span",{attrs:{class:"token comment"}},[t._v("//Number 2")]),t._v("\n"),e("span",{attrs:{class:"token comment"}},[t._v("//Number 3")]),t._v("\n")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("In diesem Beispiel wurde mit dem "),n("code",[this._v("fromArray()")]),this._v(" Operator aus einem Array ein Observable erstellt und das Array\nso als Stream verfügbar gemacht. Nach dem ein Observer den Stream abonniert (subscribed), emittet der Stream so lange Werte bis das Ende des Arrays erreicht ist.\nEin Mittel die Streams darzustellen sind die sogenannten Marble-Diagramme: Diese Diagramme bestehen aus einem\nPfeil, welcher eine Zeitleiste darstellt.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"der-observer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#der-observer","aria-hidden":"true"}},[this._v("#")]),this._v(" Der Observer")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("p",[t._v("Der Observer wird in den oberen beiden Beispielen impliziert erstellt. Ein Observer besteht im Wesentlichen aus\ndrei Methoden: "),e("code",[t._v("onNext()")]),t._v(", "),e("code",[t._v("onError()")]),t._v(" und "),e("code",[t._v("onComplete()")]),t._v(". In den Beispielen wurde mit der "),e("code",[t._v("subscribe()")]),t._v(" Methode\nein neuer Observer erstellt, welcher nur die "),e("code",[t._v("onNext()")]),t._v(" Methode als anonyme Funktion übergeben bekommen hat. Damit wird der Observer nur über einen\nneue emitteten Wert des Streams informiert. Die "),e("code",[t._v("onComplete()")]),t._v(" Methode würde im Beispiel nach dem Ausgeben des letzten\nWertes aufgerufen um dem Observer mitzuteilen, dass auf diesem Stream keine neuen Werte mehr ausgegeben werden.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[n("img",{attrs:{src:e(73),alt:"Observable-Patter",title:"Das Observerpattern"}}),n("a",[n("a",{attrs:{href:"#ref_gble18"}},[this._v("[GBLE18]")])])])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Um hier die parallele zur RxJS Bibliothek zu ziehen: Die mit "),n("code",[this._v("subscribe()")]),this._v(" übergeben Funktion ist in diesem Falle der Observer. Zu einen\nStream können beliebig viele Observer hinzugefügt werden. Das im UML angegebene Subject ist der eigentliche Stream. Die "),n("code",[this._v("registerObserver()")]),this._v("\nMethode ist die "),n("code",[this._v("subscribe()")]),this._v(" Methode des Observables.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"das-observable"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#das-observable","aria-hidden":"true"}},[this._v("#")]),this._v(" Das Observable")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" buttonEvent "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("querySelector")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'.myButton'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" clickStream "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Rx"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Observable"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("fromEvent")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'buttonEvent'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" click"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("ul",[n("li",[this._v("from()        - Erstellt ein Observable von Datenstruktur und Iteriert über diese falls möglich")]),n("li",[this._v("just()        - Erstellt ein Observable von Datenstruktur und emittet eben diese")]),n("li",[this._v("fromEvent()   - Erstellt ein Observable von einer Eventsource und emittet das Event")]),n("li",[this._v("interval()    - Erstellt ein Observable welches in einem bestimmten Intervall aufsteigende Zahlen emittet")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"die-operatoren"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#die-operatoren","aria-hidden":"true"}},[this._v("#")]),this._v(" Die Operatoren")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Nehmen wir das Klickevent Beispiel von oben: Die Aufgabe soll es sein, die Anzahl der Klicks auf den Button zu zählen. Aber anstatt die\nkomplette Logik in die "),n("code",[this._v("subscribe()")]),this._v(" zu packen, können wir uns einer Vielzahl an Operatoren bedienen, welche den Stream manipulieren.\nZunächst sollen alle Events, die auf dem Stream passieren auf einen neuen Wert abgebildet werden. Dazu kann der "),n("code",[this._v("map()")]),this._v(" Operator genutzt werden:")])},function(){var t=this.$createElement,n=this._self._c||t;return n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("var buttonEvent = document.querySelector('.myButton');\nvar clickStream = Rx.Observable.fromEvent('buttonEvent', click);\n\nvar numberStream = clickStream.map(event => 1);\n")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("clickStream       ---x----x-x----x-x--\x3e"),n("br"),this._v("\n          map()"),n("br"),this._v("\nnumberStream  ---1----1-1----1-1--\x3e")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Nun, da die Klickevents auf eine Zahl gemapt worden sind, müssen die vom numberStream emitteten Zahlen nur noch addiert werden. Dazu muss\nes State geben, in welchem das Ergebnis der vorheringen Addition gehalten wird. Ein Operator mit eingebautem State ist der "),n("code",[this._v("scan()")]),this._v("\nOperator.")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" buttonEvent "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("querySelector")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'.myButton'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" clickStream "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Rx"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Observable"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("fromEvent")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'buttonEvent'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" click"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" numberStream "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" clickStream"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("map")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("1")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" numberClickStream "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" numberStream"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("scan")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("accumulator"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" current"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" accumulator "),e("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" current"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nnumberClickStream"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("subscribe")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("number "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("log")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("number"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\\\\Output"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n\\\\"),e("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n\\\\"),e("span",{attrs:{class:"token number"}},[t._v("2")]),t._v("\n\\\\"),e("span",{attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),e("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("clickStream                 ---x----x-x----x-x--\x3e"),n("br"),this._v("\n          map()"),n("br"),this._v("\nnumberStream            ---1----1-1----1-1--\x3e"),n("br"),this._v("\n          scan()"),n("br"),this._v("\nnumberClickStream  ---1----2-3----4-5--\x3e")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" buttonEvent "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("querySelector")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'.myButton'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" clickStream "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Rx"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Observable"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("fromEvent")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'buttonEvent'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" click"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("map")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        button"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'myButton'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Wert"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("1")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        eventDaten"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" event"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("fold")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("acc"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cur"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" acc"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("push")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cur"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("p",[t._v("Hier wird dem "),e("code",[t._v("fold()")]),t._v(" Operator als ersten Wert eine leere Liste übergeben. Diese dient als Seed für den State innerhalb des Operators.\nNachdem das erste Event den "),e("code",[t._v("fold()")]),t._v(" Operator erreicht, wird das Event-JSON zu der Liste hinzugefügt. Würde man nun den clickStream\nabonieren, so würde man bei jedem Klickevent eine Liste mit JSON Objekten erhalten, deren länge davon anhängt, wie oft der Knopf\ngedrückt worden ist.\nDieses Beispiel zeigt zusätzlich das für jeden Operator nicht jedesmal ein neuer Stream erstellt werden muss. Operatoren können\nbeliebig lang auf einem Observable verkettet werden. Im oberen Fall wird das Oberservable mit dem "),e("code",[t._v("map()")]),t._v(" Operator und dem "),e("code",[t._v("fold()")]),t._v("\nOperator verknüpft.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"gebrauchliche-operatoren"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gebrauchliche-operatoren","aria-hidden":"true"}},[this._v("#")]),this._v(" Gebräuchliche Operatoren")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h4",{attrs:{id:"map"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#map","aria-hidden":"true"}},[this._v("#")]),this._v(" Map")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Der "),n("code",[this._v("map()")]),this._v(" Operator ist vermutlich der am häufigsten benutzte Operator. Er kann Werte auf dem Stream auf beliebige Weise transformieren.\nWird ein Observable beispielsweise zum Ausgeben von Klickevents genutzt, kann mit Hilfe "),n("code",[this._v("map()")]),this._v(" diesem Klickevent direkt ein eigener Wert\nzugeordnet werden. Dadurch wird es im "),n("code",[this._v("subscribe()")]),this._v(" einfacher, einen bestimmten Wert zu antizipieren.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("clickStream                 ---x----x-x----x-x--\x3e"),n("br"),this._v("\n            map()"),n("br"),this._v("\nnumberStream            ---1----1-1----1-1--\x3e")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h4",{attrs:{id:"merge"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#merge","aria-hidden":"true"}},[this._v("#")]),this._v(" Merge")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Durch den "),n("code",[this._v("merge()")]),this._v(" Operator können eine beliebige Anzahl von Streams zu einem einzigen Stream kombiniert werden. Um bei dem\nBeispiel eines Klickevents zu bleiben, könnten über hier die Events von vielen Streams zu einem einzigen verbunden werden.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("clickStream1                  ---x------x------x--\x3e"),n("br"),this._v("\nclickStream2                 ------x-------x-----\x3e"),n("br"),this._v("\nclickStream3                 --------x------x----\x3e"),n("br"),this._v("\n            merge()"),n("br"),this._v("\nmergedStream              ---x--x-x-x---xx-x--\x3e")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h4",{attrs:{id:"combinelatest"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#combinelatest","aria-hidden":"true"}},[this._v("#")]),this._v(" CombineLatest")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Auch "),n("code",[this._v("combineLatest()")]),this._v(" kann als Parameter eine beliebige Anzahl an Streams aufnehmen. Dieser Operator wird beispielsweise\nfür Berechnungen benutzt, bei denen von mehreren Streams ein Eingabewert benötigt wird. "),n("code",[this._v("combineLatest()")]),this._v(" merkt sich die\nletzte Ausgabe von allen Streams und gibt erst einen Wert aus, wenn alle Streams mindestens einen Wert auf ihrem jeweiligen\nStream ausgegeben haben. Danach wird immer dann ein Wert ausgegeben, wenn einer der Eingabestreams einen Wert ausgibt, kombiniert\nmit der letzten Ausgabe der anderen Streams.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("inputStream1         ----1---2------------3-------\x3e"),n("br"),this._v("\ninputStream2        -----------A-----B--------C--\x3e"),n("br"),this._v("\n            combineLatest()"),n("br"),this._v("\noutputStream        -----------A2---B2--B3--C3->")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h4",{attrs:{id:"buffer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#buffer","aria-hidden":"true"}},[this._v("#")]),this._v(" Buffer")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Über den "),n("code",[this._v("buffer()")]),this._v(" Operator können auf einem Stream ausgegebene Werte gebuffert werden, bis ein Event über einen anderen Stream\nausgelöst wird. Der "),n("code",[this._v("buffer()")]),this._v(" Operator könnte zum Beispiel genutzt werden, um Eingaben in eine Suchleiste zu buffern. So würde der\ngebufferte Stream erst einen Wert ausgeben, wenn der Benutzer die Entertaste drückt. Die Ausgabe erfolgt über den zu buffernden Stream\nin Form eines Arrays, welches alle Elemente, die zuvor auf dem Stream ausgegeben worden sind, enthält.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("keyStream         ---H---A---L--L----O-------------\x3e"),n("br"),this._v("\nenterStream      ---------------------x-----------\x3e"),n("br"),this._v("\n          buffer()"),n("br"),this._v("\nresultStream      ----------------------[H,A,L,L,O]->")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"hot-und-cold-observables"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hot-und-cold-observables","aria-hidden":"true"}},[this._v("#")]),this._v(" Hot und Cold Observables")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("In RxJS gibt es bei Observables zusätzlich eine Unterscheidung zwischen Hot und Cold Observables. Als Beispiel für ein Hot\nObservable kann ein Stream genommen werden, welcher von dem "),n("code",[this._v("interval()")]),this._v(" Operator erzeugt wurde:")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" liveStream "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Rx"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Observable"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("interval")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token number"}},[t._v("1000")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{attrs:{class:"token function"}},[t._v("setTimeout")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   liveStream"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("subscribe")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n        data "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("log")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'Stream: '")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" data"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{attrs:{class:"token number"}},[t._v("3000")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("Stream: 4\nStream: 5\nStream: 6\n")])])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" numbers "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token number"}},[t._v("1")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{attrs:{class:"token number"}},[t._v("2")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{attrs:{class:"token number"}},[t._v("3")]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arrayStream"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Rx"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Observable"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("form")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("numbers"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{attrs:{class:"token function"}},[t._v("setTimeout")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   arrayStream"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("subscribe")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("number "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("log")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v('"First Sub "')]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" number"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{attrs:{class:"token number"}},[t._v("1000")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{attrs:{class:"token function"}},[t._v("setTimeout")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   arrayStream"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("subscribe")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("number "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("log")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v('"Second Sub "')]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" number"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{attrs:{class:"token number"}},[t._v("3000")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("First Sub: 1\nFirst Sub: 2\nFirst Sub: 3\n\nSecond Sub: 1\nSecond Sub: 2\nSecond Sub: 3\n")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"cyclejs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cyclejs","aria-hidden":"true"}},[this._v("#")]),this._v(" CycleJS")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"konzept"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#konzept","aria-hidden":"true"}},[this._v("#")]),this._v(" Konzept")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[n("img",{attrs:{src:e(72),alt:"Cycle Konzept",title:"Konzept von CycleJS"}}),n("a",[n("a",{attrs:{href:"#ref_mhus16"}},[this._v("[MHUS16]")])])])},function(){var t=this.$createElement,n=this._self._c||t;return n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("var UserOutput = UserFunction(DisplayInput);\nvar DisplayInput = DisplayFunction(UserOutput);\n")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("var UserOutPut = UserFunction(DisplayFunction(UserOutput));\n")])])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("p",[t._v("Zu Beginn des Programmes ist der "),e("code",[t._v("UserOutPut")]),t._v(" nicht definiert, weshalb er nicht genutzt werden kann um einen neuen Wert für die Displayfunktion zu generieren, was wiederum dazu führt das kein neuer "),e("code",[t._v("UserOutPut")]),t._v(" generiert werden kann."),e("br"),t._v("\nCycleJS löst dieses Problem, indem\nes, anstatt beide Funktionen direkt miteinander zu verknüpfen, eine eigene "),e("code",[t._v("run()")]),t._v(" Methode bereitstellt, welche als Argumente die\n"),e("code",[t._v("UserFunction()")]),t._v(" und die "),e("code",[t._v("DisplayFunction()")]),t._v(" erhält und so als Bindeglied zwischen den beiden Funktion dient."),e("br"),t._v("\nIn CycleJS wird die "),e("code",[t._v("UserFunction()")]),t._v(" mit "),e("code",[t._v("main()")]),t._v(" bezeichnet. Sie enthält die Logik, die es dem Nutzer ermöglicht Eingaben zu machen und\ntransformiert diese Eingaben dahingehend, dass sie von der "),e("code",[t._v("DisplayFunction()")]),t._v(" genutzt werden kann."),e("br"),t._v("\nEine Oberfläche auf dem Display auszugeben\nist natürlich nur eine Weise, wie ein Computer mit der externen Welt interagieren kann. Ein Computer könnte auch Sound über die Boxen ausgeben,\neinen HTTP-Request zu einem Server schicken oder über einen WebSocket mit einer anderen Anwendung kommunizieren. All diese Anwendungsfällen\nwerden bei CycleJS unter dem Oberbegriff "),e("code",[t._v("Driver")]),t._v(" zusammengefasst. Ein "),e("code",[t._v("Driver")]),t._v(" ist also eine Funktion, welche wie die "),e("code",[t._v("DisplayFunktion()")]),t._v(", mit\ndem Nutzer, beziehungsweise der externen Welt, agiert.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"sources-and-sinks"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sources-and-sinks","aria-hidden":"true"}},[this._v("#")]),this._v(" Sources and Sinks")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token number"}},[t._v("01")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" xs "),e("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'xstream'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("02")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("run"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'@cycle/run'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("03")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("div"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" input"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" makeDOMDriver"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'@cycle/dom'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("04")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("05")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("main")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sources"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("06")]),t._v("   "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sinks$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("07")]),t._v("    "),e("span",{attrs:{class:"token constant"}},[t._v("DOM")]),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sources"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token constant"}},[t._v("DOM")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("select")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'input'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("events")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'change'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("08")]),t._v("       "),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("map")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ev "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" ev"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("checked"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("09")]),t._v("       "),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("startWith")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token boolean"}},[t._v("false")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("10")]),t._v("       "),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("map")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("toggled "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("11")]),t._v("         "),e("span",{attrs:{class:"token function"}},[t._v("div")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("12")]),t._v("           "),e("span",{attrs:{class:"token function"}},[t._v("input")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("attrs"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("type"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'checkbox'")]),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'Toggle me'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("13")]),t._v("           "),e("span",{attrs:{class:"token function"}},[t._v("p")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("toggled "),e("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'ON'")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'off'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("14")]),t._v("         "),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("15")]),t._v("       "),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("16")]),t._v("   "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("17")]),t._v("   "),e("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sinks$"),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("18")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("19")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("20")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("run")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("21")]),t._v("   "),e("span",{attrs:{class:"token constant"}},[t._v("DOM")]),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("makeDOMDriver")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'#app'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{attrs:{class:"token number"}},[t._v("22")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Was zunächst auffällt, ist, dass dieses Beispiel nicht die RxJS Bibliothek zum bereitstellen von Streams importiert. Stattdessen wird\ndie xStream Bibliothek benutzt, welche eigens für die Benutzung von CycleJS entwickelt wurde. Allerdings kann CycleJS ebenso gut mit RxJS oder\nMost.js benutzt werden. Dabei unterscheiden sich diese Bibliotheken im Grund nur darin, welche Operatoren zur Verfügung gestellt werden und wie\ndie Operatoren und Funktionen benannt werden. So ist die 'subscribe()` Methode unter RxJS nun die 'addListner()' Methode in xStreams."),n("br"),this._v("\nZudem macht die xStream Bibliothek keine Unterscheidung zwischen Hot und Cold Streams, da jeder mit xStream erzeugte Stream ein Hot Stream ist.")])},function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("p",[s("img",{attrs:{src:e(71),alt:"Ausgabe",title:"Ausgabe"}}),t._v("\nDazu wird im Programm zunächst mit der "),s("code",[t._v("makeDOMDriver()")]),t._v(" ein neuer Driver für den DOM erstellt. Dieser DOM Driver kann in der HTML Datei\nunter dem Tag "),s("code",[t._v("#app")]),t._v(" den DOM manipulieren und bootstrapt so das Framework. Die "),s("code",[t._v("run()")]),t._v(" Methode stellt der "),s("code",[t._v("main()")]),t._v(" Methode den instanziierten\nDriver über den Übergabeparameter "),s("code",[t._v("sources")]),t._v(" zur Verfügung. Das "),s("code",[t._v("source")]),t._v(" Objekt enthält alle Driver, welcher in der "),s("code",[t._v("run()")]),t._v(" Methode angelegt\nworden sind."),s("br"),t._v("\nNun kann in der "),s("code",[t._v("main()")]),t._v(" Methode ein neuer Stream erzeugt werden. In diesem Beispiel wird über den DOM Driver ein Stream von einem Event erzeugt,\nwelches jedesmal einen Wert emitten soll, fall sich der der Wert des Eingabefeldes ändert. Ein Marble-Diagram für Zeile 07 sieht wie folgt\naus:")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Der Nutzer klickt auf die CheckBox, was bei jedem Klick ein "),n("code",[this._v("Change")]),this._v(" Event hervorruft. Der sink$ Stream emittet mit jedem Klick auf die\nCheckbox nun ein komplettes Event. Da für die Anwendung nur der mit dem Event assoziierte Wert von Bedeutung ist, muss der Stream mit dem\n"),n("code",[this._v("map()")]),this._v(" Operator manipuliert werden.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("         map()"),n("br"),this._v("\nsink$:----true----false-----true---false-----true--\x3e")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("p",[t._v("In der "),e("code",[t._v("map()")]),t._v(" Methode wird das Event auf sein eigentlichen Wert gemapt. Da das Event von einer Checkbox kommt, ist der assoziierte Wert\nabwechselnd "),e("code",[t._v("true")]),t._v(" oder "),e("code",[t._v("false")]),t._v("."),e("br"),t._v("\nNachdem das Event auf den Wert gemapt worden ist, wird der Stream mit dem "),e("code",[t._v("startWith()")]),t._v(" Operator initialisiert.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("         startWith(false)"),n("br"),this._v("\nsink$:false----true----false-----true---false-----true--\x3e")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Da der Stream am Ende auf einen virtuellen DOM gemapt wird, muss er einen initialen Wert haben. Würde kein Wert mit "),n("code",[this._v("startWith()")]),this._v(" gesetzt, so\nwürde der DOM erst mit einer Aktion des Nutzers angezeigt werden, da erst durch eine Aktion ein Wert auf dem Stream emittet wird."),n("br"),this._v("\nDa der Stream\nallerdings von dem DOM Driver genutzt wird um die Oberfläche darzustellen, würde auch hier eine Deadlock entstehen. Der Nutzer hätte keine\nMöglichkeit einen initialen Wert zu emitten weil keine View gerendert wurde und es wird keine View gerendert da kein initialer Wert von dem\nStream emittet wird."),n("br"),this._v("\nDie "),n("code",[this._v("startWith()")]),this._v(" Methode emittet auf dem Stream ein initialen Wert, welche als Startpunkt für die View genutzt werden kann.")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("p",[t._v("Zuletzt wird der Wert des Streams auf die DOM Elemente gemapt. Zusammengefasst sammelt der "),e("code",[t._v("sink$")]),t._v(" Stream Events von einer Checkbox, wandelt\ndie Events auf dem Stream in "),e("code",[t._v("true")]),t._v(" oder "),e("code",[t._v("false")]),t._v(" um, initialisiert den Stream mit einem "),e("code",[t._v("false")]),t._v(' und mapt diese Werte auf ein div Element, welches\ndie Checkbox besitzt von der die Events stammen und einen Paragraphen, der je nach dem welcher Wert auf dem Stream emittet wird auf "ON" oder "off"\ngeschaltet werden kann.'),e("br"),t._v("\nDieser "),e("code",[t._v("sink$")]),t._v(" Stream wird von der "),e("code",[t._v("main()")]),t._v(" Methode returned und dient als Eingabe für den Driver, welcher wiederum das "),e("code",[t._v("source")]),t._v(" Objekt der "),e("code",[t._v("main()")]),t._v("\nMethode bildet.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"side-effects"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#side-effects","aria-hidden":"true"}},[this._v("#")]),this._v(" Side effects")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[n("img",{attrs:{src:e(70),alt:"Cycle Konzept",title:"Konzept von CycleJS"}}),n("a",[n("a",{attrs:{href:"#ref_alex16"}},[this._v("[ALEX16]")])])])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Die Sources, welcher der Main Funktion zur Verfügung gestellt werden diesen als Eingabewert. Dieser Eingabewert wurde von den Drivern erstellt und\nkann das Lesen einer Datei, ein HTTP-Request oder ähnliche Operationen sein, welcher Nebeneffekte haben können. Dadurch, dass die "),n("code",[this._v("main()")]),this._v(" Funktion\nkeinerlei State oder Nebeneffekte abhandeln muss, wird es sehr leicht Tests für ein CycleJS Programm zu schreiben. Eingabestreams von Sourcen können\nleicht gemockt werden und die Ausgabe über den Sinkstream kann mit der Erwarten Ausgabe verglichen werden."),n("br"),this._v("\nEs muss nicht wie im Objektorientierten Umfeld eine Funktion aus dem Kontext gerissen werden und ein State nachgebildet werden, unter welchem\ndie Funktion richtige Ausgaben produziert.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"erstellung-von-komponenten"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#erstellung-von-komponenten","aria-hidden":"true"}},[this._v("#")]),this._v(" Erstellung von Komponenten")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Wie in anderen Frameworks auch, erlaubt CycleJS die Erstellung von wiederverwertbaren Komponenten. Wie die "),n("code",[this._v("main()")]),this._v(" Funktion in einer CycleJS\nAnwendung, besteht eine Komponente ebenfalls aus einer einzelnen Funktion. Diese Funktion erhält auch Eingabewerte über ein Sources Objekt und\ngibt mit dem Sink Objekt eine Ausgabe zurück. Dadurch entsteht eine Art fraktales Design bei der Erstellung einer CycleJS Applikation, wo\ndie Komponenten selbst eine kleine CycleJS Applikation darstellen."),n("br"),n("img",{attrs:{src:e(69),alt:"Cycle Konzept",title:"Konzept von CycleJS"}}),n("a",[n("a",{attrs:{href:"#ref_asta15"}},[this._v("[ASTA15]")])])])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("p",[t._v("Komponenten erhalten über einen "),e("code",[t._v("props$")]),t._v(" Stream alle Informationen, welche zur Erstellung der Komponente nötig sind. Dieser "),e("code",[t._v("props$")]),t._v(" Stream wird\nzusätzlich zu dem Source Stream übergeben, welches die Komponenten von seiner Parentkomponente erhält. So erhält die Komponente zugriff auf die\nin der Parentkomponente definierten Driver und kann beispielsweise dazu dienen HTTP-Request zu rendern. Über den "),e("code",[t._v("props$")]),t._v(" Stream würde die\nChildkomponente mitgeteilt bekommen, auf welchen HTTP-Request es lauschen soll. So können verschiedene dieser Komponenten instanziiert und\nindividuell konfiguriert werden."),e("br"),t._v("\nDie Ausgabe einer solchen Komponente wäre ein Sink Stream, welcher einen virtuellen DOM beinhaltet. Diese virtuellen DOM Streams können in der\nParentfunktion gebündelt werden und anschließend an den DOM Driver weitergereicht werden, wo die Komponenten gerendert werden.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"beispiel-komponente"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beispiel-komponente","aria-hidden":"true"}},[this._v("#")]),this._v(" Beispiel Komponente")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("main")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sources"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" changeWeight$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" sources"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token constant"}},[t._v("DOM")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("select")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'#weight'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("events")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'input'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("map")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ev "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" ev"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" changeHeight$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" sources"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token constant"}},[t._v("DOM")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("select")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'#height'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("events")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'input'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("map")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ev "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" ev"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" state$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Observable"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("combineLatest")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    changeWeight$"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("startWith")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token number"}},[t._v("70")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    changeHeight$"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("startWith")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token number"}},[t._v("170")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("weight"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" heightMeters "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" height "),e("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("0.01")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" bmi "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("round")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("weight "),e("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("heightMeters "),e("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" heightMeters"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("weight"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bmi"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vdom$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" state$"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("map")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("weight"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bmi"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n     "),e("span",{attrs:{class:"token function"}},[t._v("div")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n       "),e("span",{attrs:{class:"token function"}},[t._v("div")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n         "),e("span",{attrs:{class:"token string"}},[t._v("'Weight '")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" weight "),e("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'kg'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         "),e("span",{attrs:{class:"token function"}},[t._v("input")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'#weight'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           attrs"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("type"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'range'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" min"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("40")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("140")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" weight"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n         "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       "),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),e("span",{attrs:{class:"token function"}},[t._v("div")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n         "),e("span",{attrs:{class:"token string"}},[t._v("'Height '")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" height "),e("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'cm'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         "),e("span",{attrs:{class:"token function"}},[t._v("input")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'#height'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           attrs"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("type"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'range'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" min"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("140")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("210")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" height"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n         "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       "),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),e("span",{attrs:{class:"token function"}},[t._v("h2")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'BMI is '")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" bmi"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     "),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{attrs:{class:"token constant"}},[t._v("DOM")]),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vdom$"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{attrs:{class:"token function"}},[t._v("run")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token constant"}},[t._v("DOM")]),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("makeDOMDriver")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'#main-container'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("p",[t._v("Im oberen Codebeispiel ist eine BMI Applikation zu sehen, in welcher zwei Slider benötigt werden um den BMI einer Person zu berechnen. Von diesen beiden\nSlidern wird ein Stream von Eingaben erstellt und im "),e("code",[t._v("state$")]),t._v(" Stream zunächst kombiniert. "),e("code",[t._v("combinedLatest()")]),t._v(" nimmt dabei als Argumente eine beliebige\nAnzahl an Streams an und emittet selbst einen Wert, wenn einer der beiden Argumentstreams einen neuen Wert emittet hat. Zusätzlich wird dabei der letzte\nemittete Wert der übrigen Streams ausgegeben. Der "),e("code",[t._v("state$")]),t._v(" Stream enthält nun alle Werte, welche auf der Oberfläche Angezeigt werden sollen."),e("br"),t._v("\nDas Problem ist, dass bei der Erstellung der Slider Elemente viel Code doppelt geschrieben werden muss. Hier würde sich anbieten eine Sliderkomponente\nzu erstellen, welche eine Codedublizierung verhindert.")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("LabeledSlider")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sources"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" props$"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" change$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" sources"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token constant"}},[t._v("DOM")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("select")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'.slider'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("events")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'input'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("map")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ev "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" ev"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" initialValue$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" props$"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("map")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" props"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("init"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("first")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" value$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" initialValue$"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("concat")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("change$"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" state$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Observable"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("combineLatest")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value$"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" props$"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" props"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      label"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" props"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("label"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      unit"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" props"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("unit"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      min"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" props"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("min"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      max"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" props"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      value"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vtree$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" state$"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("map")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n      "),e("span",{attrs:{class:"token function"}},[t._v("div")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'.labeled-slider'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{attrs:{class:"token function"}},[t._v("label")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'.label'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token template-string"}},[e("span",{attrs:{class:"token string"}},[t._v("`")]),e("span",{attrs:{class:"token interpolation"}},[e("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("state"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("label"),e("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{attrs:{class:"token string"}},[t._v(": ")]),e("span",{attrs:{class:"token interpolation"}},[e("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("state"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{attrs:{class:"token interpolation"}},[e("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("state"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("unit"),e("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{attrs:{class:"token string"}},[t._v("`")])]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{attrs:{class:"token function"}},[t._v("input")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'.slider'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("type"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'range'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" min"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" state"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("min"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" state"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" state"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{attrs:{class:"token constant"}},[t._v("DOM")]),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vtree$"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    value"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" state$"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("map")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" state"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("p",[t._v("Die Funktion "),e("code",[t._v("LabeledSlider()")]),t._v(" erhält über das das "),e("code",[t._v("sources")]),t._v(" Objekte zugriff auf alle Driver, welche auch das Paraentobjekt hätte. Über die "),e("code",[t._v("props$")]),t._v(" kann\nnun der Anfangswert, Min und Max Werte und die Beschriftung des Sliders vergeben werden. Von der Sliderkomponente wird am Ende ein virtueller DOM sowie\nder aktuelle Wert der Komponente zurück an die Parentkomponente gegeben. Die neue Sliderkomponente kann nun in der "),e("code",[t._v("main()")]),t._v(" Funktion verwendet werden.")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("main")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sources"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" weightProps$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Observable"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token keyword"}},[t._v("of")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    label"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'Weight'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    unit"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'kg'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    min"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("40")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    max"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("150")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    init"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("70")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" weightSinks$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("LabeledSlider")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("sources"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" weightProps$"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" heightProps$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Observable"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token keyword"}},[t._v("of")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    label"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'Height'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    unit"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'cm'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    min"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("140")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    max"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("220")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    init"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("170")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" heightSinks$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("LabeledSlider")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("sources"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" heightProps$"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bmi$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Observable"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("combineLatest")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("weightSinks$"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" heightSinks$"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("weight"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" heightMeters "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" height "),e("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("0.01")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bmi "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("round")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("weight "),e("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("heightMeters "),e("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" heightMeters"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bmi"),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vtree$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Observable"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("combineLatest")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    bmi$"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" weightSink$"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token constant"}},[t._v("DOM")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" heightSink$"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token constant"}},[t._v("DOM")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bmi"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" weightVTree"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" heightVTree"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n      "),e("span",{attrs:{class:"token function"}},[t._v("div")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        weightVTree"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        heightVTree"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{attrs:{class:"token function"}},[t._v("h2")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'BMI is '")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" bmi"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{attrs:{class:"token constant"}},[t._v("DOM")]),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vtree$\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("p",[t._v("Die "),e("code",[t._v("main()")]),t._v(" Funktion wurde in diesem Beispiel refactored, um Gebrauch von der neu erstellten Sliderkomponente zu machen. Die beiden\nSlider werden nun in "),e("code",[t._v("weightSink")]),t._v(" und "),e("code",[t._v("heightSink")]),t._v(" Streams gehalten. Über die "),e("code",[t._v("props$")]),t._v(" erhalten die beiden Slider ihrer jeweiligen\nEigenschaften."),e("br"),t._v("\nUm den BMI zu berechnen, können die beiden Sliderstreams zu einem neuen Stream kombiniert werden, welcher bei jeder Änderung eines Sliders direkt den neuen BMI Wert berechnet und emittet. Zur Darstellung des DOMs werden ebenfalls beide Sliderstreams kombiniert,\nnur wird anstelle des akutellen Wertes der DOM der Sliderkomponente mit dem DOM der Parentkomponente zusammengefügt. Diese Zusammenführung bildet den\n"),e("code",[t._v("vtree$")]),t._v(" Stream, welcher an der DOM Driver zur Renderung weitergeleitet wird.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"model-view-intent-pattern"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#model-view-intent-pattern","aria-hidden":"true"}},[this._v("#")]),this._v(" Model-View-Intent Pattern")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Wenn die Labelsliderkomponente betrachtet wird, fällt schnell auf das manche Streams nur der Darstellung dienen und wieder andere eine Art Zustand halten, welcher\ndurch den virtuellen DOM dargestellt wird."),n("br"),this._v("\nUmgangssprachlich werden diese Bestandteile auch View und Model genannt. Die View soll dabei die Daten im Model anzeigen.\nNormalerweise wird bei dem allgemeinen MVC Pattern die View mit einem Controller gepaart, welcher die Aufgabe hat das Model mit der View zu verbinden und das Model durch\nEingaben vom Nutzer zu verändern.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[n("img",{attrs:{src:e(68),alt:"Cycle Konzept",title:"Konzept von CycleJS"}}),n("a",[n("a",{attrs:{href:"#ref_hdor16"}},[this._v("[HDOR16]")])])])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Was zum normalen MVC Pattern nun noch fehlt ist ein Controller, der jeweils die View als auch das Model kennt und bei miteinander vereint. Dies wäre der Objektorinierte\nAnsatz. In einem funktonalem Framework wie CycleJS gibt es allerdings keine Objekte, die wiederum andere Objekte mit neuen Informationen updaten. Stattdessen\neignet sich für ein solches Framework das Model-View-Intent Pattern."),n("br"),this._v("\nDas eigentlich neue ist hier nur der Intent-Teil. Mit Intent ist gemeint, was der Nutzer mit einem Klick auf einen Knopf oder das Verschieben eines Reglers im Grundsatz\nerreichen möchte. Am beispiel der Sliderkomponente im BMI Rechner ist der Intent des Benutzers das Einstellen einer neuen Körpergröße oder Körpergewicht.\nMit diesem Ansatz kann die Sliederkomponente nocheinmal refactored werden.")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("intent")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DOMSource"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" DOMSource"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("select")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'.slider'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("events")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'input'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("map")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ev "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" ev"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("model")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newValue$"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" props$"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" initialValue$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" props$"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("map")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" props"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("init"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("first")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" value$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" initialValue$"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("concat")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newValue$"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Rx"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Observable"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("combineLatest")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value$"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" props$"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" props"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      label"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" props"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("label"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      unit"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" props"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("unit"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      min"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" props"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("min"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      max"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" props"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      value"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("view")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state$"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state$"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("map")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n      "),e("span",{attrs:{class:"token function"}},[t._v("div")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'.labeled-slider'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{attrs:{class:"token function"}},[t._v("label")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'.label'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token template-string"}},[e("span",{attrs:{class:"token string"}},[t._v("`")]),e("span",{attrs:{class:"token interpolation"}},[e("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("state"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("label"),e("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{attrs:{class:"token string"}},[t._v(": ")]),e("span",{attrs:{class:"token interpolation"}},[e("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("state"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{attrs:{class:"token interpolation"}},[e("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("state"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("unit"),e("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{attrs:{class:"token string"}},[t._v("`")])]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{attrs:{class:"token function"}},[t._v("input")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'.slider'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("type"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'range'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" min"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" state"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("min"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" state"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" state"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("LabeledSlider")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sources"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" action$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("intent")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sources"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token constant"}},[t._v("DOM")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" state$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("model")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action$"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sources"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vtree$ "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("view")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state$"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{attrs:{class:"token constant"}},[t._v("DOM")]),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vtree$"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    value"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" state$"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("map")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" state"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Hier wird das MVI-Pattern gut ersichtlich: Der Nutzer hat die Absicht (Intent), den Slider zu verändern und damit eine neue Eingabe zu veranlassen.\nDer daraus entstehende Eingaben Stream wird an das Model weitergereicht, welches sich aufgrund der Eingabe verändert. In diesem Fall würde der neue\nWert vom Slider das "),n("code",[this._v("value")]),this._v(" Feld aktualisieren. Aufgrund der Änderung im Model wird eine Änderung in der View angestoßen, welche letztendlich von der\nChildkomponete an die Parentkomponete und von dort an den DOM Driver weitergegeben wird.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[n("img",{attrs:{src:e(67),alt:"Cycle Konzept",title:"Konzept von CycleJS"}}),n("a",[n("a",{attrs:{href:"#ref_davi16"}},[this._v("[DAVI16]")])])])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Dieses Diagramm verdeutlicht die Struktur der Komponente sehr gut. Auch in der Sliderkomponente wird aus der Absicht eine vom Benutzer ausgeführte\nAktion, welche an das Model weitergegeben wird und schlussendlich zur View wird, welche den virtuellen DOM an den Sink Stream der Komponente weitergibt.\nZwischen diesen Schritten können Artefakte entstehen, welche ebenfalls für die Parentkomponente bestimmt sein kann und nicht der virtuelle DOM ist. Im\nFall der Sliderkomponente wäre dies der momentane Wert der Sliderkomponente, welche ebenfalls über den Sink Stream an die Parentkomponente weitergegeben\nwird. Der aktuelle Wert wird in der Komponente vom "),n("code",[this._v("state$")]),this._v(" Stream entnommen.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"quellen"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#quellen","aria-hidden":"true"}},[this._v("#")]),this._v(" Quellen")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[n("a",{attrs:{name:"ref_davi16"}},[this._v("[DAVI16]")]),this._v(": David: Composition in CycleJS, Choo, React and Angular2 16.07.2016, URL: http://blog.krawaller.se/posts/composition-in-cyclejs-choo-react-and-angular2/ (letzter Zugriff: 29.06.2018)")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[n("a",{attrs:{name:"ref_hdor16"}},[this._v("[HDOR16]")]),this._v(": Hannes Dorfmann: MODEL-VIEW-INTENT ON ANDROID, 04.03.2016, URL: http://blog.krawaller.se/posts/composition-in-cyclejs-choo-react-and-angular2/ (letzter Zugriff: 29.06.2018)")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[n("a",{attrs:{name:"ref_asta15"}},[this._v("[ASTA15]")]),this._v(": Andre Stalz: Components, 2015, URL: https://cycle.js.org/components.html (letzter Zugriff: 29.06.2018)")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[n("a",{attrs:{name:"ref_alex16"}},[this._v("[ALEX16]")]),this._v(": Alex: Demystifying Cycle.js (core source), 13.04.2016, URL: https://medium.com/@_whitecolor/demystifying-cycle-js-core-source-7bcae39fb64c (letzter Zugriff: 29.06.2018)")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[n("a",{attrs:{name:"ref_mhus16"}},[this._v("[MHUS16]")]),this._v(": Maarten Hus: Post-MVC part 7: Cycle.js 28.07.2016, URL: http://dontpanic.42.nl/2016/07/cyclejs.html\n(letzter Zugriff: 29.06.2018)")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[n("a",{attrs:{name:"ref_gble18"}},[this._v("[GBLE18]")]),this._v(": Gregory Bleiker 18.01.2018 URL: https://en.wikipedia.org/wiki/Observer_pattern#/media/File:Observer_w_update.svg\n(letzter Zugriff: 29.06.2018)")])}],a=e(0),r=Object(a.a)({},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"content"},[t._m(0),t._m(1),e("p",[t._v("In den letzten Jahren ist das Thema funktionales Programmieren verstärkt aufgekommen. Die Ziele,\nwelche beim funktionalen Programmieren erreicht werden sollen, sind dabei die selben wie auch im objektorientierten Programmieren:")]),t._m(2),e("p",[t._v("Auch wenn die Ziele der beiden Ansätze gleich sind, so sind die unterliegenden Paradigmen doch völlig unterschiedlich:\nBeim objektorientieren Ansatz wird versucht, die Daten und die damit verbundenen Verhalten miteinander zu vereinen.\nDie daraus resultierende Vereinigung ist die Grundlage des OOP-Ansatzes: Das Objekt.\nIn einem Objekt werden über Instanzvariablen Daten gehalten, die den Zustand des Objektes beschreiben. Zusätzlich\nenthält das Objekt Verhalten in Form von Methoden, mit deren Hilfe der Zustand des Objektes manipuliert werden kann.")]),e("p",[t._v("Ein einfaches Beispiel ist die Klasse Arbeiter:")]),t._m(3),e("p",[t._v("Nun könnten die Instanzen dieses Arbeiterobjektes in einer Liste gehalten werden, um sie so beispielsweise zu verwalten.\nEin Anwendungsfall könnte es des Weiteren sein, dass alle Arbeiter in dieser Liste eine Gehaltserhöhung bekommen sollen.\nUm dies in einer objektorientierten Sprache wie in diesem Falle Java zu realisieren, müsste das zu schreibende Programm\nüber die Liste der Arbeiter iterieren und für jeden Arbeiter die Methode zur Gehaltserhöhung aufrufen.")]),t._m(4),e("p",[t._v("Derselbe Sachverhalt kann natürlich auch mit einem funktionalen Ansatz abgebildet werden:")]),t._m(5),e("p",[t._v("Hier wird direkt der erste Unterschied zum objektorientieren Ansatz deutlich: Die Trennung von Daten und Verhalten.\nWo im OOP-Ansatz bei der Erstellung der Daten auch gleichzeitig die Methoden zum Manipulieren der Daten mitliefern\nwerden musste, so bleiben im FP-Ansatz die Daten rein. Hier können die Daten durch den Einsatz von einfachen Arrays\nrepräsentiert werden.")]),e("p",[t._v("Zur Veränderung der Daten können nun verschiedene Funktionen geschrieben werden. Dabei sollten allerdings verschiedene\nSchlüsselkonzepte beachtet werden:")]),e("center",[e("b",[t._v("1. Funktionen haben eine einzige Aufgabe")])]),e("p",[t._v("Die geschriebenen Funktionen haben genau eine Aufgabe. Dadurch wird erreicht das verschiedene Funktionen\nmiteinander kombinierbar werden und so ein komplexeres Programm bilden. Zudem erhöht das Beschränken einer\nFunktion auf eine einzige Aufgabe die Testbarkeit des Codes. Für das Arbeiterbeispiel bedeutet dies, dass\nes eine Funktion names gehälter_erhöhen() geben wird, welche nur dafür Zuständig ist über die Arbeiter der\nListe zu iterieren. Diese Funktions erhält zwei Eingabeparameter: Eine Liste mit Arbeiters und der eigentliche\nGehaltserhöhung.\nZusätzlich wird es eine Funktion gehalt_erhöhen() implementiert, welche anschließend nur zur Aufgabe hat, das Gehalt eines einzelnen\nArbeiters zu erhöhen.")]),e("center",[e("b",[t._v("2. Daten sind Immutable")])]),e("p",[t._v('Durch den Funktionsaufruf von gehalt_erhöhen() wird kein Wert des originalen Arrays verändert. Immutable bedeutet,\ndass es keine Funktion geben kann, welche die Daten auf irgendeine weise verändern kann. Im OOP-Ansatz ist es übelich den\nZustand oder "state" eines Objektes beliebig zu verändern. Im FP-Ansatz hingegen werden nur Kopien der veränderten Daten\nerzeugt, mit denen im Verlauf des Programmes weitergearbeitet wird. Der originale "state" in einem funktionalen Programm\nbleibt somit erhalten.\nDies hat zum Vorteile das einerseits ein Funktionsaufruf auf den selben Daten in jedem Fall den selben Output besitzt,\nzum anderen kann der Zustand so, falls gewünscht, über den gesamten Programmablauf verfolgt werden. Auch dieses\nKonzept trägt zur Lesbarkeit und Wartbarkeit des Codes bei.')]),e("center",[e("b",[t._v("3. Funktionen sind rein (Pure)")])]),t._m(6),e("center",[e("b",[t._v("4. Funktionen sind erste Klasse (First-Class)")])]),e("p",[t._v("Dieses Konzept wird nicht nur von rein funktionalen Programmiersprachen genutzt (z.b Javascript und PHP), ist allerdings\nunabdingbar für den funktionalen Ansatz. First-Class sind Funktionen, welcher einer Variable im Programm zugeordnet werden\nkönnen. Dadurch können Funktionen wie ein normaler Datentyp behandelt werden und zugleich im Verlauf des Programmes ausgeführt\nwerden.\nEbenfalls wird es dadurch möglich eine Funktion einer anderen Funktion als Übergabeparameter zu übergeben. Auch wird es\ndadurch möglich Funktionen als Rückgabewert zu verwenden. So ist es beispielsweise möglich eine Filterfunktion zu erstellen,\nwelche als Parameter eine Funktion übergeben bekommt. Die übergebene Funktion entscheidet dann, ob Werte den Filter passieren\noder aussortiert werden.")]),e("p",[t._v("Mit diesen vier Konzepten als Vorlage könnten die Funktionen zur Gehaltserhöhung folgendermaßen aussehen:")]),t._m(7),t._m(8),t._m(9),t._m(10),t._m(11),t._m(12),t._m(13),t._m(14),e("p",[t._v("--------------\x3e")]),e("p",[t._v("Auf dieser Zeitleiste könnten Werte als Events dargestellt werden, um zu verdeutlichen, dass diese Werte\nüber einen bestimmten Zeitraum emittet worden sind. Für das obere Beispiel würde eine Zeitleiste mit Events\nfolgendermaßen aussehen:")]),e("p",[t._v("---1---2---3--\x3e")]),e("p",[t._v("Über einen bestimmten Zeitraum wurden also Events auf einem Stream ausgegeben. Da nach der 3 das Ende des\nArrays erreicht ist, endet (completed) der Stream nach diesem Event. Dies wird durch einen Senkrechten Strich\nin der Zeitleiste dargestellt.")]),e("p",[t._v("---1---2---3--|->")]),t._m(15),t._m(16),e("p",[t._v('Dieses Designpattern wird auch Observerpattern genannt, was sich vermutlich schon alleine vom Namen "Observable" ableiten ließ.\nDie untere Abbildung zeigt wie das Observerpattern in UML-Schreibweise aussieht.')]),t._m(17),t._m(18),t._m(19),e("p",[t._v("Das Observable ist ein Konstrukt mit der Aufgabe, die abonnierten Observer über neu erzeugte Werte zu informieren. Die Werte\nselbst stammen dabei von einem Producer, welcher im inneren des Observables Werte generiert.")]),t._m(20),e("p",[t._v("In diesem Beispiel wird ein Stream von Klicks auf einen Button erstellt. Der Producer des Stream ist in diesem Fall das Klickevent des\nKnopfes. Ein Observable ist also das Bindeglied zwischen dem Producer, welcher die eigentlichen Werte emittet und den abonnierten Observern,\nwelche die emitteten Werte konsumieren. RxJS biete viele Funktionen an, um aus einer Variablen oder einer Eventsource ein Observable mit dem\ndazu passendem Producer zu erstellen:")]),t._m(21),t._m(22),e("p",[t._v("Die Frage die man sich jetzt stellen kann, ist die, welchen Vorteil die Verwendung von Observables beziehungsweise Streams hat.\nÜber ein Array kann auch mit einer Schleife iteriert werden oder von einer Eventsource muss in der Regel kein Stream erstellt werden\num diesen auszuwerten. Das Ware Potential von RxJS und anderen reaktiven Bibliotheken liegt in der Bereitstellung der Operatoren, welche\nauf den Stream angewendet werden können.")]),t._m(23),t._m(24),e("p",[t._v("Im Diagramm würden die beiden Streams nun so aussehen:")]),t._m(25),t._m(26),t._m(27),t._m(28),e("p",[t._v("Der fold() Operator hält im ersten Parameter der übergeben Funktion (accumulator) den State. In dem zweiten Parameter (current) wird der\nvom Stream emittete Wert entgegengenommen. Anschließend muss in der Funktion lediglich der derzeitige Wert auf den State addiert werden.\nIn diesem Beispiel wurden nur Zahlen addiert, allerdings können auch komplexe Objekte oder sogar Streams selbst emitted werden.\nAnstatt das Event auf eine '1' zu mappen, könnte das Event ebenso gut auf ein JSON Objekt gemapt werden:")]),t._m(29),t._m(30),t._m(31),e("p",[t._v("Die hier vorgestellten Operatoren sind nur eine kleine Auswahl aus der RxJS Bibliothek, welche über 75 Operatoren enthält. Diese\nOperatoren kommen in fast jedem Projekt zum Einsatz, falls es einen Berührungspunkt mit der RxJS Bibliothek gibt. Beispielsweise\nverwendet Angular 2 in seinem HTTP-Modul Observables um REST-Aufrufe durchzuführen. Eine Anwendung muss also nicht komplett um die\nBibliothek herumkonzipiert werden, um die Vorteile von rxJS nutzen zu können.")]),t._m(32),t._m(33),t._m(34),t._m(35),t._m(36),t._m(37),t._m(38),t._m(39),t._m(40),t._m(41),t._m(42),t._m(43),t._m(44),t._m(45),t._m(46),e("p",[t._v("Der liveStream Stream wurde so erzeugt, dass jede Sekunde ein hochzählender Wert emittet wird.")]),e("p",[t._v("liveStream ---1---2---3---4---5---6---\x3e")]),e("p",[t._v("Allerdings gibt es für die ersten 3 Sekunden noch keinen Abonnenten, welcher die Werte aus dem Stream entgegennehmen könnte.\nDer Timeout für den ersten Abonnenten wird erst 3 Sekunden nach Erstellung des Streams getriggert. Folgende Ausgabe wird auf\nder Konsole ausgegeben:")]),t._m(47),e("p",[t._v("Der Stream emittet also schon Werte noch bevor ein Observer ihn abonniert hat. Würde zu einem späteren Zeit ein weiterer Observer\nden Stream abonnieren, würde dieser Observer erst beim nächsten Emit des Streams benachrichtig werden, alle vorhergehenden Werte\ndie vor dem Abonieren des neuen Observers liegen, bekommt der neue Observer nicht mit.")]),e("p",[t._v("Anders verhält es sich mit Cold Observables. Hier wird für jeden Observer ein neuer Stream aufgemacht und nach einem abonnieren\ndes Streams bekommt der Observer alle Werte, welche von dem Stream emittet worden sind.")]),e("p",[t._v("Als Beispiel eines Cold Observables kann man die Erzeugung eines Stream aus einem Array von Zahlen nehmen:")]),t._m(48),e("p",[t._v("Ausgabe:")]),t._m(49),e("p",[t._v("In diesem Fall teilen sich die beiden Observer nicht einen Stream, sondern jeder für jeden Observer wird ein gesonderter Stream\nerzeugt. Der Stream emittet keinen Wert solange nicht mindestens ein Observer den Stream abonniert hat. Ob ein Stream Hot oder Cold\nist hängt davon hab mit welchem Konstruktor das Observable erzeugt wurde.")]),t._m(50),e("p",[t._v('CycleJS ist ein funktionale reaktives Javascript Framework, geschrieben von André Staltz. CycleJS verbindet den das funktionale Konzept mit\neiner Streaming Bibliothek. Dabei kann sowohl RxJS als auch das speziell für CycleJS entwickelte xStream als "Streamengine" genutzt werden.')]),t._m(51),e("p",[t._v('Das Kernkonzept von CycleJS lautet: "Was wäre wenn der Nutzer eine Funktion wäre?". Es ist einfach sich eine moderne graphische\nAnwendung als eine große Funktion vorzustellen: Sie nimmt die Nutzereingaben des Nutzer über Eingabegeräte wie Maus und\nTastatur auf, verarbeitet diese, und gibt anschließend ein Resultat über den Bildschirm aus. Der Nutzer wiederrum nimmt die\nAusgabe der Oberfläche als Eingabe, verarbeitet diese, und gibt die Ausgabe der Nutzerfunktion über seine "Ausgabegeräte" wie\nHände oder auch Sprache an die Oberfläche zurück.')]),t._m(52),e("p",[t._v("Das obere Bild veranschaulicht dieses Konzept und zeigt gleichzeitig, woher CycleJS seinen Namen hat: Die Eingaben und Ausgaben\nbilden einen Kreis, wo die Ausgaben der einen Funktion die Eingaben der anderen Funktion ist. Funktional sieht das Konzept\nfolgendermaßen aus:")]),t._m(53),e("p",[t._v("Hier erkennt man auch direkt, welche Lösung das CycleJS Framework bereitstellen muss. Es gibt eine zirkuläre Abhängigkeit zwischen\nder Benutzerfunktion und der Oberflächenfunktion. Um diese Abhängigkeit deutlicher zu machen kann die Eingabe einer Funktion mit\nder produzierenden Funktion subsituiert werden:")]),t._m(54),t._m(55),t._m(56),e("p",[t._v("Eine Beispielapplikation in CycleJS kann folgendermaßen aussehen:")]),t._m(57),t._m(58),e("p",[t._v("Das der Beispielcode soll folgende Ausgabe produzieren:")]),t._m(59),e("p",[t._v("Nutzer:  ---Click------Click----Click------Click----\x3e")]),e("p",[t._v("sink$:   -----x----------x--------x----------x------\x3e")]),t._m(60),e("p",[t._v("sink$: -----x--------x-------x------x---------x----\x3e")]),t._m(61),t._m(62),e("p",[t._v("sink$:---------true----false-----true---false-----true--\x3e")]),t._m(63),t._m(64),t._m(65),t._m(66),e("p",[t._v("Aufgrund der Trennung von Nebeneffekten wie Lesen einer Datei, Manipulieren des DOMs oder Abschicken eines HTTP-Requests von der reinen Logik des\nProgrammes, stellt CycleJS funktionales Framework dar. Die folgende Abbildung verdeutlicht den vorherigen Abschnitt und zeigt gut die Trennung von\nLogik zu Nebeneffekten:")]),t._m(67),t._m(68),t._m(69),t._m(70),t._m(71),t._m(72),t._m(73),t._m(74),t._m(75),t._m(76),t._m(77),t._m(78),t._m(79),t._m(80),t._m(81),t._m(82),t._m(83),t._m(84),t._m(85),t._m(86),t._m(87),t._m(88),t._m(89),t._m(90),t._m(91),t._m(92),t._m(93)],1)},s,!1,null,null,null);n.default=r.exports},67:function(t,n,e){t.exports=e.p+"assets/img/mvi.23423e03.svg"},68:function(t,n,e){t.exports=e.p+"assets/img/mvc-diagram.75518d87.svg"},69:function(t,n,e){t.exports=e.p+"assets/img/nested-components.4ba58f80.svg"},70:function(t,n,e){t.exports=e.p+"assets/img/cycleSideEffects.166af670.svg"},71:function(t,n,e){t.exports=e.p+"assets/img/exampleOutput.09be7f1d.png"},72:function(t,n,e){t.exports=e.p+"assets/img/UserAsFunction.c0f4ed5d.png"},73:function(t,n,e){t.exports=e.p+"assets/img/Observer_w_update.47f07abf.svg"}}]);